
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_KWSHORT_CIRCUIT_OR_KWleftAND_KWSHORT_CIRCUIT_AND_KWleftEQleftLTGTLEGEleftPLUSMINUSleftMODleftTIMESDIVIDErightNOT_KWMINUS_MINUSPLUS_PLUSSHENASE INT FLOAT HARFE_SABET JAYEKHALI NOGHTE_VIRGUL COMMA COMMENT DOT PLUS MINUS TIMES DIVIDE MOD EQUALS PLUS_EQ MINUS_EQ TIMES_EQ DIVIDE_EQ COLON PLUS_PLUS MINUS_MINUS LT GT LE GE EQ OPEN_PAREN CLOSE_PAREN OPEN_BRACE CLOSE_BRACE OPEN_BRACKET CLOSE_BRACKET QUESTION_MARK PROGRAM_KW STRUCT_KW CONST_KW INT_KW FLOAT_KW BOOL_KW CHAR_KW IF_KW THEN_KW ELSE_KW SWITCH_KW END_KW CASE_KW DEFAULT_KW WHILE_KW RETURN_KW BREAK_KW OR_KW AND_KW SHORT_CIRCUIT_OR_KW SHORT_CIRCUIT_AND_KW NOT_KW TRUE_KW FALSE_KW barnameh : PROGRAM_KW SHENASE tarifha  tarifha : tarifha tarif  tarifha : tarif  tarif : tarifeSakhtar  tarif : tarifeMoteghayyer  tarif : tarifeTabe  tarifeSakhtar : STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE  tarifhayeMahalli : tarifhayeMahalli tarifMoteghayyereMahdud  tarifhayeMahalli : epsilon  tarifMoteghayyereMahdud : jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL  jenseMahdud : CONST_KW jens  jenseMahdud : jens  jens : INT_KW  jens : FLOAT_KW  jens : BOOL_KW  jens : CHAR_KW  tarifeMoteghayyer : jens tarifhayeMoteghayyerha NOGHTE_VIRGUL  tarifhayeMoteghayyerha : tarifeMeghdareAvvalie  tarifhayeMoteghayyerha : tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer EQUALS ebarateSade  tarifeShenaseyeMoteghayyer : SHENASE  tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET INT CLOSE_BRACKET  tarifeTabe : jens SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle  tarifeTabe : SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle  vorudi : vorudiha  vorudi : epsilon  vorudiha : vorudiha NOGHTE_VIRGUL jensVorudiha  vorudiha : jensVorudiha  jensVorudiha : jens shenaseyeVorudiha  shenaseyeVorudiha : shenaseyeVorudiha COMMA shenaseyeVorudi  shenaseyeVorudiha : shenaseyeVorudi  shenaseyeVorudi : SHENASE  shenaseyeVorudi : SHENASE OPEN_BRACKET CLOSE_BRACKET  jomle : jomleyeMorakkab  jomle : jomleyeEbarat  jomle : jomleyeEntekhab  jomle : jomleyeTekrar  jomle : jomleyeBazgasht  jomle : jomleyeShekast  jomleyeMorakkab : OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE  jomleha : jomleha jomle  jomleha : epsilon  jomleyeEbarat : ebarat NOGHTE_VIRGUL  jomleyeEbarat : NOGHTE_VIRGUL  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle  jomleyeEntekhab : SWITCH_KW OPEN_PAREN  ebarateSade CLOSE_PAREN  onsoreHalat onsorePishfarz END_KW  onsoreHalat : CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsorePishfarz : DEFAULT_KW COLON jomle NOGHTE_VIRGUL  onsorePishfarz :  epsilon  jomleyeTekrar : WHILE_KW OPEN_PAREN ebarateSade CLOSE_PAREN jomle jomleyeBazgasht :  RETURN_KW NOGHTE_VIRGUL  jomleyeBazgasht : RETURN_KW ebarat NOGHTE_VIRGUL  jomleyeShekast : BREAK_KW NOGHTE_VIRGUL  ebarat : taghirpazir EQUALS ebarat  ebarat : taghirpazir PLUS_EQ ebarat  ebarat : taghirpazir MINUS_EQ ebarat  ebarat : taghirpazir TIMES_EQ ebarat  ebarat : taghirpazir DIVIDE_EQ ebarat  ebarat : taghirpazir PLUS_PLUS  ebarat : taghirpazir MINUS_MINUS  ebarat : ebarateSade  ebarateSade : ebarateSade OR_KW ebarateSade  ebarateSade : ebarateSade AND_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade  ebarateSade : NOT_KW ebarateSade  ebarateSade : ebarateRabetei  ebarateRabetei : ebarateRiaziManteghi  ebarateRabetei : ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi  amalgareRabetei : LT   amalgareRabetei : GT   amalgareRabetei : GE  amalgareRabetei : LE  amalgareRabetei : EQ  ebarateRiaziManteghi : ebarateYegani ebarateRiaziManteghi : ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi  amalgareRiazi : PLUS  amalgareRiazi : MINUS  amalgareRiazi : TIMES  amalgareRiazi : DIVIDE  amalgareRiazi : MOD  ebarateYegani : amalgareYegani ebarateYegani  ebarateYegani : amel  amalgareYegani : MINUS  amalgareYegani : TIMES  amalgareYegani : QUESTION_MARK  amel : taghirpazir  amel :  taghirnapazir  taghirpazir : SHENASE  taghirpazir : taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET taghirpazir : taghirpazir DOT SHENASE  taghirnapazir : OPEN_PAREN ebarat CLOSE_PAREN  taghirnapazir : sedaZadan taghirnapazir : meghdareSabet  sedaZadan : SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN  bordareVorudi : bordareVorudiha  bordareVorudi : epsilon  bordareVorudiha : bordareVorudiha COMMA ebarat bordareVorudiha : ebarat  meghdareSabet : INT  meghdareSabet :  FLOAT  meghdareSabet :  HARFE_SABET  meghdareSabet : TRUE_KW  meghdareSabet : FALSE_KW  epsilon : '
    
_lr_action_items = {'EQUALS':([16,19,37,58,67,81,131,153,],[-22,27,-22,-94,-23,118,-96,-95,]),'WHILE_KW':([63,65,66,97,98,99,100,105,106,107,109,113,139,141,144,145,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[95,-9,95,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,95,95,-43,-10,95,-46,-41,-42,-55,95,-47,-48,95,95,95,95,95,]),'CLOSE_BRACKET':([35,38,39,40,41,42,43,44,46,47,50,53,55,56,58,80,81,83,88,93,116,117,123,124,125,126,127,128,129,130,131,148,149,150,151,152,153,154,],[67,-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-66,-92,-71,-87,137,-81,-74,-65,-64,-97,-69,-67,-68,-70,153,-96,-59,-61,-60,-62,-63,-95,-100,]),'BREAK_KW':([63,65,66,97,98,99,100,105,106,107,109,113,139,141,144,145,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[96,-9,96,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,96,96,-43,-10,96,-46,-41,-42,-55,96,-47,-48,96,96,96,96,96,]),'GE':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,125,131,153,154,],[-107,-109,72,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,-81,-97,-96,-95,-100,]),'TIMES_EQ':([58,81,131,153,],[-94,121,-96,-95,]),'END_KW':([170,173,175,191,194,195,196,197,],[-110,180,-54,-53,-49,-50,-51,-52,]),'CHAR_KW':([3,5,7,11,12,13,20,21,23,26,33,62,64,65,97,98,99,100,104,105,106,107,109,112,113,114,115,139,141,144,145,158,162,166,167,169,179,180,],[10,-5,-4,10,-3,-6,10,-2,10,-17,-110,10,10,-9,-38,-37,-36,-45,-25,-35,-110,-40,-39,10,-8,-7,-24,-58,-56,10,-44,-57,-10,-46,-41,-55,-47,-48,]),'MINUS_MINUS':([58,81,131,153,],[-94,123,-96,-95,]),'MOD':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,117,125,131,153,154,],[-107,-109,73,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,73,73,-97,-96,-95,-100,]),'COMMA':([16,17,18,19,36,37,38,39,40,41,42,43,44,46,47,50,52,53,55,56,58,59,60,61,67,80,81,83,88,116,117,123,124,125,126,127,128,129,131,134,135,136,137,146,148,149,150,151,152,153,154,163,],[-22,-18,25,-20,-19,-22,-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,-21,-108,-92,-98,-94,-32,92,-33,-23,-66,-92,-71,-87,-81,-74,-65,-64,-97,-69,-67,-68,-70,-96,155,-104,-31,-34,25,-59,-61,-60,-62,-63,-95,-100,-103,]),'PLUS':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,117,125,131,153,154,],[-107,-109,78,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,78,78,-97,-96,-95,-100,]),'CASE_KW':([165,170,194,195,196,197,],[171,176,-49,-50,-51,-52,]),'OPEN_PAREN':([9,16,27,45,48,49,51,54,57,58,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,95,97,98,99,100,101,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[20,23,48,-90,48,-89,48,48,-91,91,48,-9,48,-76,-75,-83,-85,-77,-86,-79,-78,48,48,-82,-84,48,48,48,48,48,48,138,-38,-37,-36,-45,140,48,48,-35,-110,-40,-39,-8,48,48,48,48,48,48,-58,48,-56,-110,-44,48,-57,48,48,-43,-10,48,-46,-41,-42,-55,48,-47,-48,48,48,48,48,48,]),'GT':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,125,131,153,154,],[-107,-109,68,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,-81,-97,-96,-95,-100,]),'NOGHTE_VIRGUL':([16,17,18,19,28,31,36,37,38,39,40,41,42,43,44,46,47,50,52,53,55,56,58,59,60,61,63,65,66,67,80,81,83,88,94,96,97,98,99,100,102,105,106,107,108,109,113,116,117,123,124,125,126,127,128,129,131,136,137,139,141,142,144,145,146,148,149,150,151,152,153,154,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,186,187,188,189,190,192,193,],[-22,-18,26,-20,-29,62,-19,-22,-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,-21,-108,-92,-98,-94,-32,-30,-33,100,-9,100,-23,-66,-92,-71,-87,-28,139,-38,-37,-36,-45,141,-35,-110,-40,145,-39,-8,-81,-74,-65,-64,-97,-69,-67,-68,-70,-96,-31,-34,-58,-56,158,-110,-44,162,-59,-61,-60,-62,-63,-95,-100,-57,100,100,-43,-10,100,-46,-41,-42,-55,100,-47,-48,100,100,100,191,100,100,194,195,196,197,]),'SWITCH_KW':([63,65,66,97,98,99,100,105,106,107,109,113,139,141,144,145,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[101,-9,101,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,101,101,-43,-10,101,-46,-41,-42,-55,101,-47,-48,101,101,101,101,101,]),'BOOL_KW':([3,5,7,11,12,13,20,21,23,26,33,62,64,65,97,98,99,100,104,105,106,107,109,112,113,114,115,139,141,144,145,158,162,166,167,169,179,180,],[8,-5,-4,8,-3,-6,8,-2,8,-17,-110,8,8,-9,-38,-37,-36,-45,-25,-35,-110,-40,-39,8,-8,-7,-24,-58,-56,8,-44,-57,-10,-46,-41,-55,-47,-48,]),'RETURN_KW':([63,65,66,97,98,99,100,105,106,107,109,113,139,141,144,145,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[102,-9,102,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,102,102,-43,-10,102,-46,-41,-42,-55,102,-47,-48,102,102,102,102,102,]),'CONST_KW':([33,64,65,106,113,144,162,],[-110,112,-9,-110,-8,112,-10,]),'IF_KW':([63,65,66,97,98,99,100,105,106,107,109,113,139,141,144,145,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[103,-9,103,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,103,103,-43,-10,103,-46,-41,-42,-55,103,-47,-48,103,103,103,103,103,]),'SHORT_CIRCUIT_AND_KW':([38,39,40,41,42,43,44,46,47,50,52,53,55,56,58,80,81,83,88,116,117,125,126,127,128,129,131,143,153,154,156,157,],[-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,87,-108,-92,-98,-94,87,-92,-71,-87,-81,-74,-97,87,87,-68,-70,-96,87,-95,-100,87,87,]),'PLUS_EQ':([58,81,131,153,],[-94,120,-96,-95,]),'NOT_KW':([27,48,51,63,65,66,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[51,51,51,51,-9,51,51,51,51,51,51,51,-38,-37,-36,-45,51,51,-35,-110,-40,-39,-8,51,51,51,51,51,51,-58,51,-56,-110,-44,51,-57,51,51,-43,-10,51,-46,-41,-42,-55,51,-47,-48,51,51,51,51,51,]),'PROGRAM_KW':([0,],[2,]),'CLOSE_PAREN':([20,23,28,30,31,32,34,38,39,40,41,42,43,44,46,47,50,53,55,56,58,59,60,61,80,81,82,83,88,91,94,116,117,123,124,125,126,127,128,129,131,132,133,134,135,136,137,148,149,150,151,152,153,154,156,157,163,],[-110,-110,-29,-27,-26,63,66,-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-32,-30,-33,-66,-92,125,-71,-87,-110,-28,-81,-74,-65,-64,-97,-69,-67,-68,-70,-96,154,-102,-101,-104,-31,-34,-59,-61,-60,-62,-63,-95,-100,164,165,-103,]),'COLON':([174,177,178,182,183,],[181,184,185,187,188,]),'DEFAULT_KW':([170,194,195,196,197,],[174,-49,-50,-51,-52,]),'INT_KW':([3,5,7,11,12,13,20,21,23,26,33,62,64,65,97,98,99,100,104,105,106,107,109,112,113,114,115,139,141,144,145,158,162,166,167,169,179,180,],[15,-5,-4,15,-3,-6,15,-2,15,-17,-110,15,15,-9,-38,-37,-36,-45,-25,-35,-110,-40,-39,15,-8,-7,-24,-58,-56,15,-44,-57,-10,-46,-41,-55,-47,-48,]),'OPEN_BRACE':([22,63,65,66,97,98,99,100,105,106,107,109,113,139,141,144,145,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[33,106,-9,106,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,106,106,-43,-10,106,-46,-41,-42,-55,106,-47,-48,106,106,106,106,106,]),'QUESTION_MARK':([27,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[57,-90,57,-89,57,57,-91,57,-9,57,-76,-75,-83,-85,-77,-86,-79,-78,57,57,-82,-84,57,57,57,57,57,57,-38,-37,-36,-45,57,57,-35,-110,-40,-39,-8,57,57,57,57,57,57,-58,57,-56,-110,-44,57,-57,57,57,-43,-10,57,-46,-41,-42,-55,57,-47,-48,57,57,57,57,57,]),'PLUS_PLUS':([58,81,131,153,],[-94,124,-96,-95,]),'HARFE_SABET':([27,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[38,-90,38,-89,38,38,-91,38,-9,38,-76,-75,-83,-85,-77,-86,-79,-78,38,38,-82,-84,38,38,38,38,38,38,-38,-37,-36,-45,38,38,-35,-110,-40,-39,-8,38,38,38,38,38,38,-58,38,-56,-110,-44,38,-57,38,38,-43,-10,38,-46,-41,-42,-55,38,-47,-48,38,38,38,38,38,]),'SHORT_CIRCUIT_OR_KW':([38,39,40,41,42,43,44,46,47,50,52,53,55,56,58,80,81,83,88,116,117,125,126,127,128,129,131,143,153,154,156,157,],[-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,84,-108,-92,-98,-94,84,-92,-71,-87,-81,-74,-97,-69,-67,-68,-70,-96,84,-95,-100,84,84,]),'OR_KW':([38,39,40,41,42,43,44,46,47,50,52,53,55,56,58,80,81,83,88,116,117,125,126,127,128,129,131,143,153,154,156,157,],[-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,85,-108,-92,-98,-94,85,-92,-71,-87,-81,-74,-97,-69,-67,-68,-70,-96,85,-95,-100,85,85,]),'DIVIDE':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,117,125,131,153,154,],[-107,-109,71,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,71,71,-97,-96,-95,-100,]),'MINUS_EQ':([58,81,131,153,],[-94,119,-96,-95,]),'$end':([1,5,7,11,12,13,21,26,97,98,99,100,104,105,107,109,114,115,139,141,145,158,166,167,169,179,180,],[0,-5,-4,-1,-3,-6,-2,-17,-38,-37,-36,-45,-25,-35,-40,-39,-7,-24,-58,-56,-44,-57,-46,-41,-55,-47,-48,]),'ELSE_KW':([97,98,99,100,105,107,109,139,141,145,158,166,167,169,179,180,],[-38,-37,-36,-45,-35,-40,-39,-58,-56,-44,-57,172,-41,-55,-47,-48,]),'INT':([24,27,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,171,172,176,179,180,181,184,185,187,188,],[35,43,-90,43,-89,43,43,-91,43,-9,43,-76,-75,-83,-85,-77,-86,-79,-78,43,43,-82,-84,43,43,43,43,43,43,-38,-37,-36,-45,43,43,-35,-110,-40,-39,-8,43,43,43,43,43,43,-58,43,-56,-110,-44,43,-57,43,43,-43,-10,43,-46,-41,-42,-55,177,43,182,-47,-48,43,43,43,43,43,]),'DOT':([55,58,81,131,153,],[90,-94,90,-96,-95,]),'TIMES':([27,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,85,86,87,88,89,91,97,98,99,100,102,103,105,106,107,109,113,116,117,118,119,120,121,122,125,131,138,139,140,141,144,145,153,154,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[45,-107,-109,79,-99,-105,-80,-90,-88,-106,45,-89,-93,45,-108,45,-92,-98,-91,-94,45,-9,45,-76,-75,-83,-85,-77,-86,-79,-78,45,45,-82,-84,-92,45,45,45,45,-87,45,45,-38,-37,-36,-45,45,45,-35,-110,-40,-39,-8,79,79,45,45,45,45,45,-97,-96,45,-58,45,-56,-110,-44,-95,-100,45,-57,45,45,-43,-10,45,-46,-41,-42,-55,45,-47,-48,45,45,45,45,45,]),'OPEN_BRACKET':([16,37,55,58,61,81,131,153,],[24,24,89,-94,93,89,-96,-95,]),'FLOAT':([27,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,171,172,176,179,180,181,184,185,187,188,],[47,-90,47,-89,47,47,-91,47,-9,47,-76,-75,-83,-85,-77,-86,-79,-78,47,47,-82,-84,47,47,47,47,47,47,-38,-37,-36,-45,47,47,-35,-110,-40,-39,-8,47,47,47,47,47,47,-58,47,-56,-110,-44,47,-57,47,47,-43,-10,47,-46,-41,-42,-55,178,47,183,-47,-48,47,47,47,47,47,]),'LT':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,125,131,153,154,],[-107,-109,69,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,-81,-97,-96,-95,-100,]),'MINUS':([27,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,81,84,85,86,87,88,89,91,97,98,99,100,102,103,105,106,107,109,113,116,117,118,119,120,121,122,125,131,138,139,140,141,144,145,153,154,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[49,-107,-109,70,-99,-105,-80,-90,-88,-106,49,-89,-93,49,-108,49,-92,-98,-91,-94,49,-9,49,-76,-75,-83,-85,-77,-86,-79,-78,49,49,-82,-84,-92,49,49,49,49,-87,49,49,-38,-37,-36,-45,49,49,-35,-110,-40,-39,-8,70,70,49,49,49,49,49,-97,-96,49,-58,49,-56,-110,-44,-95,-100,49,-57,49,49,-43,-10,49,-46,-41,-42,-55,49,-47,-48,49,49,49,49,49,]),'AND_KW':([38,39,40,41,42,43,44,46,47,50,52,53,55,56,58,80,81,83,88,116,117,125,126,127,128,129,131,143,153,154,156,157,],[-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,86,-108,-92,-98,-94,86,-92,-71,-87,-81,-74,-97,86,86,-68,-70,-96,86,-95,-100,86,86,]),'DIVIDE_EQ':([58,81,131,153,],[-94,122,-96,-95,]),'FALSE_KW':([27,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[39,-90,39,-89,39,39,-91,39,-9,39,-76,-75,-83,-85,-77,-86,-79,-78,39,39,-82,-84,39,39,39,39,39,39,-38,-37,-36,-45,39,39,-35,-110,-40,-39,-8,39,39,39,39,39,39,-58,39,-56,-110,-44,39,-57,39,39,-43,-10,39,-46,-41,-42,-55,39,-47,-48,39,39,39,39,39,]),'THEN_KW':([38,39,40,41,42,43,44,46,47,50,53,55,56,58,83,88,116,117,125,126,127,128,129,131,143,153,154,],[-107,-109,-73,-72,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-71,-87,-81,-74,-97,-69,-67,-68,-70,-96,159,-95,-100,]),'TRUE_KW':([27,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,91,97,98,99,100,102,103,105,106,107,109,113,118,119,120,121,122,138,139,140,141,144,145,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[53,-90,53,-89,53,53,-91,53,-9,53,-76,-75,-83,-85,-77,-86,-79,-78,53,53,-82,-84,53,53,53,53,53,53,-38,-37,-36,-45,53,53,-35,-110,-40,-39,-8,53,53,53,53,53,53,-58,53,-56,-110,-44,53,-57,53,53,-43,-10,53,-46,-41,-42,-55,53,-47,-48,53,53,53,53,53,]),'CLOSE_BRACE':([33,64,65,97,98,99,100,105,106,107,109,113,139,141,144,145,158,160,161,162,166,167,168,169,179,180,],[-110,114,-9,-38,-37,-36,-45,-35,-110,-40,-39,-8,-58,-56,-110,-44,-57,167,-43,-10,-46,-41,-42,-55,-47,-48,]),'EQ':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,125,131,153,154,],[-107,-109,74,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,-81,-97,-96,-95,-100,]),'STRUCT_KW':([3,5,7,11,12,13,21,26,97,98,99,100,104,105,107,109,114,115,139,141,145,158,166,167,169,179,180,],[14,-5,-4,14,-3,-6,-2,-17,-38,-37,-36,-45,-25,-35,-40,-39,-7,-24,-58,-56,-44,-57,-46,-41,-55,-47,-48,]),'FLOAT_KW':([3,5,7,11,12,13,20,21,23,26,33,62,64,65,97,98,99,100,104,105,106,107,109,112,113,114,115,139,141,144,145,158,162,166,167,169,179,180,],[6,-5,-4,6,-3,-6,6,-2,6,-17,-110,6,6,-9,-38,-37,-36,-45,-25,-35,-110,-40,-39,6,-8,-7,-24,-58,-56,6,-44,-57,-10,-46,-41,-55,-47,-48,]),'SHENASE':([2,3,4,5,6,7,8,10,11,12,13,14,15,21,25,26,27,29,45,48,49,51,54,57,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,89,90,91,92,97,98,99,100,102,103,104,105,106,107,109,110,111,113,114,115,118,119,120,121,122,138,139,140,141,144,145,147,155,158,159,160,161,162,164,166,167,168,169,172,179,180,181,184,185,187,188,],[3,9,16,-5,-14,-4,-15,-16,9,-3,-6,22,-13,-2,37,-17,58,61,-90,58,-89,58,58,-91,58,-9,58,-76,-75,-83,-85,-77,-86,-79,-78,58,58,-82,-84,58,58,58,58,58,131,58,61,-38,-37,-36,-45,58,58,-25,-35,-110,-40,-39,37,-12,-8,-7,-24,58,58,58,58,58,58,-58,58,-56,-110,-44,-11,58,-57,58,58,-43,-10,58,-46,-41,-42,-55,58,-47,-48,58,58,58,58,58,]),'LE':([38,39,40,42,43,44,46,47,50,53,55,56,58,81,88,116,125,131,153,154,],[-107,-109,75,-99,-105,-80,-88,-106,-93,-108,-92,-98,-94,-92,-87,-81,-97,-96,-95,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'epsilon':([20,23,33,91,106,144,170,],[30,30,65,133,65,161,175,]),'taghirnapazir':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'jomleyeTekrar':([63,66,159,160,164,172,181,184,185,187,188,],[97,97,97,97,97,97,97,97,97,97,97,]),'jomleyeEntekhab':([63,66,159,160,164,172,181,184,185,187,188,],[98,98,98,98,98,98,98,98,98,98,98,]),'onsorePishfarz':([170,],[173,]),'jomleyeEbarat':([63,66,159,160,164,172,181,184,185,187,188,],[99,99,99,99,99,99,99,99,99,99,99,]),'meghdareSabet':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'tarifhayeMoteghayyerha':([4,110,],[18,146,]),'amel':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ebarat':([48,63,66,89,91,102,118,119,120,121,122,155,159,160,164,172,181,184,185,187,188,],[82,108,108,130,135,142,148,149,150,151,152,163,108,108,108,108,108,108,108,108,108,]),'jensVorudiha':([20,23,62,],[28,28,94,]),'tarif':([3,11,],[12,21,]),'shenaseyeVorudi':([29,92,],[59,136,]),'shenaseyeVorudiha':([29,],[60,]),'amalgareYegani':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'vorudiha':([20,23,],[31,31,]),'taghirpazir':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[55,81,55,55,81,81,55,55,55,55,55,55,81,81,81,55,81,81,81,81,81,55,55,81,81,81,81,81,81,81,81,81,81,]),'jomleha':([144,],[160,]),'amalgareRabetei':([40,],[77,]),'jens':([3,11,20,23,62,64,112,144,],[4,4,29,29,29,111,147,111,]),'tarifeMeghdareAvvalie':([4,25,110,],[17,36,17,]),'tarifeMoteghayyer':([3,11,],[5,5,]),'onsoreHalat':([165,],[170,]),'tarifMoteghayyereMahdud':([64,144,],[113,113,]),'ebarateRabetei':([27,48,51,63,66,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'jomleyeMorakkab':([63,66,159,160,164,172,181,184,185,187,188,],[105,105,105,105,105,105,105,105,105,105,105,]),'ebarateRiaziManteghi':([27,48,51,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[40,40,40,40,40,116,117,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'tarifeSakhtar':([3,11,],[7,7,]),'bordareVorudi':([91,],[132,]),'barnameh':([0,],[1,]),'tarifeShenaseyeMoteghayyer':([4,25,110,],[19,19,19,]),'ebarateYegani':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[44,44,44,88,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'tarifhayeMahalli':([33,106,],[64,144,]),'bordareVorudiha':([91,],[134,]),'jomle':([63,66,159,160,164,172,181,184,185,187,188,],[104,115,166,168,169,179,186,189,190,192,193,]),'ebarateSade':([27,48,51,63,66,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[52,80,83,80,80,126,127,128,129,80,80,80,143,80,80,80,80,80,156,157,80,80,80,80,80,80,80,80,80,80,]),'tarifha':([3,],[11,]),'jomleyeShekast':([63,66,159,160,164,172,181,184,185,187,188,],[107,107,107,107,107,107,107,107,107,107,107,]),'tarifeTabe':([3,11,],[13,13,]),'jenseMahdud':([64,144,],[110,110,]),'amalgareRiazi':([40,116,117,],[76,76,76,]),'vorudi':([20,23,],[32,34,]),'sedaZadan':([27,48,51,54,63,66,76,77,84,85,86,87,89,91,102,103,118,119,120,121,122,138,140,155,159,160,164,172,181,184,185,187,188,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'jomleyeBazgasht':([63,66,159,160,164,172,181,184,185,187,188,],[109,109,109,109,109,109,109,109,109,109,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> barnameh","S'",1,None,None,None),
  ('barnameh -> PROGRAM_KW SHENASE tarifha','barnameh',3,'p_barnameh','yacc.py',28),
  ('tarifha -> tarifha tarif','tarifha',2,'p_tarifha_1','yacc.py',35),
  ('tarifha -> tarif','tarifha',1,'p_tarifha_2','yacc.py',41),
  ('tarif -> tarifeSakhtar','tarif',1,'p_tarif_1','yacc.py',47),
  ('tarif -> tarifeMoteghayyer','tarif',1,'p_tarif_2','yacc.py',53),
  ('tarif -> tarifeTabe','tarif',1,'p_tarif_3','yacc.py',59),
  ('tarifeSakhtar -> STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE','tarifeSakhtar',5,'p_tarifeSakhtar','yacc.py',65),
  ('tarifhayeMahalli -> tarifhayeMahalli tarifMoteghayyereMahdud','tarifhayeMahalli',2,'p_tarifhayeMahalli_1','yacc.py',71),
  ('tarifhayeMahalli -> epsilon','tarifhayeMahalli',1,'p_tarifhayeMahalli_2','yacc.py',77),
  ('tarifMoteghayyereMahdud -> jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifMoteghayyereMahdud',3,'p_tarifMoteghayyereMahdud','yacc.py',83),
  ('jenseMahdud -> CONST_KW jens','jenseMahdud',2,'p_jenseMahdud_1','yacc.py',108),
  ('jenseMahdud -> jens','jenseMahdud',1,'p_jenseMahdud_2','yacc.py',115),
  ('jens -> INT_KW','jens',1,'p_jens_1','yacc.py',121),
  ('jens -> FLOAT_KW','jens',1,'p_jens_2','yacc.py',127),
  ('jens -> BOOL_KW','jens',1,'p_jens_3','yacc.py',133),
  ('jens -> CHAR_KW','jens',1,'p_jens_4','yacc.py',139),
  ('tarifeMoteghayyer -> jens tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifeMoteghayyer',3,'p_tarifeMoteghayyer','yacc.py',145),
  ('tarifhayeMoteghayyerha -> tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',1,'p_tarifhayeMoteghayyerha_1','yacc.py',155),
  ('tarifhayeMoteghayyerha -> tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',3,'p_tarifhayeMoteghayyerha_2','yacc.py',161),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer','tarifeMeghdareAvvalie',1,'p_tarifeMeghdareAvvalie_1','yacc.py',168),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer EQUALS ebarateSade','tarifeMeghdareAvvalie',3,'p_tarifeMeghdareAvvalie_2','yacc.py',174),
  ('tarifeShenaseyeMoteghayyer -> SHENASE','tarifeShenaseyeMoteghayyer',1,'p_tarifeShenaseyeMoteghayyer_1','yacc.py',181),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET INT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_2','yacc.py',187),
  ('tarifeTabe -> jens SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',6,'p_tarifeTabe_1','yacc.py',198),
  ('tarifeTabe -> SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',5,'p_tarifeTabe_2','yacc.py',203),
  ('vorudi -> vorudiha','vorudi',1,'p_vorudi_1','yacc.py',208),
  ('vorudi -> epsilon','vorudi',1,'p_vorudi_2','yacc.py',213),
  ('vorudiha -> vorudiha NOGHTE_VIRGUL jensVorudiha','vorudiha',3,'p_vorudiha_1','yacc.py',218),
  ('vorudiha -> jensVorudiha','vorudiha',1,'p_vorudiha_2','yacc.py',223),
  ('jensVorudiha -> jens shenaseyeVorudiha','jensVorudiha',2,'p_jensVorudiha','yacc.py',228),
  ('shenaseyeVorudiha -> shenaseyeVorudiha COMMA shenaseyeVorudi','shenaseyeVorudiha',3,'p_shenaseyeVorudiha_1','yacc.py',233),
  ('shenaseyeVorudiha -> shenaseyeVorudi','shenaseyeVorudiha',1,'p_shenaseyeVorudiha_2','yacc.py',238),
  ('shenaseyeVorudi -> SHENASE','shenaseyeVorudi',1,'p_shenaseyeVorudi_1','yacc.py',243),
  ('shenaseyeVorudi -> SHENASE OPEN_BRACKET CLOSE_BRACKET','shenaseyeVorudi',3,'p_shenaseyeVorudi_2','yacc.py',248),
  ('jomle -> jomleyeMorakkab','jomle',1,'p_jomle_1','yacc.py',253),
  ('jomle -> jomleyeEbarat','jomle',1,'p_jomle_2','yacc.py',258),
  ('jomle -> jomleyeEntekhab','jomle',1,'p_jomle_3','yacc.py',263),
  ('jomle -> jomleyeTekrar','jomle',1,'p_jomle_4','yacc.py',268),
  ('jomle -> jomleyeBazgasht','jomle',1,'p_jomle_5','yacc.py',273),
  ('jomle -> jomleyeShekast','jomle',1,'p_jomle_6','yacc.py',278),
  ('jomleyeMorakkab -> OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE','jomleyeMorakkab',4,'p_jomleyeMorakkab','yacc.py',283),
  ('jomleha -> jomleha jomle','jomleha',2,'p_jomleha_1','yacc.py',288),
  ('jomleha -> epsilon','jomleha',1,'p_jomleha_2','yacc.py',293),
  ('jomleyeEbarat -> ebarat NOGHTE_VIRGUL','jomleyeEbarat',2,'p_jomleyeEbarat_1','yacc.py',298),
  ('jomleyeEbarat -> NOGHTE_VIRGUL','jomleyeEbarat',1,'p_jomleyeEbarat_2','yacc.py',303),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle','jomleyeEntekhab',4,'p_jomleyeEntekhab_1','yacc.py',308),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle','jomleyeEntekhab',6,'p_jomleyeEntekhab_2','yacc.py',313),
  ('jomleyeEntekhab -> SWITCH_KW OPEN_PAREN ebarateSade CLOSE_PAREN onsoreHalat onsorePishfarz END_KW','jomleyeEntekhab',7,'p_jomleyeEntekhab_3','yacc.py',318),
  ('onsoreHalat -> CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_1','yacc.py',324),
  ('onsoreHalat -> CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_2','yacc.py',329),
  ('onsoreHalat -> onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_3','yacc.py',334),
  ('onsoreHalat -> onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_4','yacc.py',339),
  ('onsorePishfarz -> DEFAULT_KW COLON jomle NOGHTE_VIRGUL','onsorePishfarz',4,'p_onsorePishfarz_1','yacc.py',344),
  ('onsorePishfarz -> epsilon','onsorePishfarz',1,'p_onsorePishfarz_2','yacc.py',349),
  ('jomleyeTekrar -> WHILE_KW OPEN_PAREN ebarateSade CLOSE_PAREN jomle','jomleyeTekrar',5,'p_jomleyeTekrar','yacc.py',354),
  ('jomleyeBazgasht -> RETURN_KW NOGHTE_VIRGUL','jomleyeBazgasht',2,'p_jomleyeBazgasht_1','yacc.py',359),
  ('jomleyeBazgasht -> RETURN_KW ebarat NOGHTE_VIRGUL','jomleyeBazgasht',3,'p_jomleyeBazgasht_2','yacc.py',364),
  ('jomleyeShekast -> BREAK_KW NOGHTE_VIRGUL','jomleyeShekast',2,'p_jomleyeShekast','yacc.py',369),
  ('ebarat -> taghirpazir EQUALS ebarat','ebarat',3,'p_ebarat_1','yacc.py',375),
  ('ebarat -> taghirpazir PLUS_EQ ebarat','ebarat',3,'p_ebarat_2','yacc.py',387),
  ('ebarat -> taghirpazir MINUS_EQ ebarat','ebarat',3,'p_ebarat_3','yacc.py',400),
  ('ebarat -> taghirpazir TIMES_EQ ebarat','ebarat',3,'p_ebarat_4','yacc.py',413),
  ('ebarat -> taghirpazir DIVIDE_EQ ebarat','ebarat',3,'p_ebarat_5','yacc.py',426),
  ('ebarat -> taghirpazir PLUS_PLUS','ebarat',2,'p_ebarat_6','yacc.py',439),
  ('ebarat -> taghirpazir MINUS_MINUS','ebarat',2,'p_ebarat_7','yacc.py',448),
  ('ebarat -> ebarateSade','ebarat',1,'p_ebarat_8','yacc.py',457),
  ('ebarateSade -> ebarateSade OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_1','yacc.py',463),
  ('ebarateSade -> ebarateSade AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_2','yacc.py',487),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_3','yacc.py',511),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_4','yacc.py',535),
  ('ebarateSade -> NOT_KW ebarateSade','ebarateSade',2,'p_ebarateSade_5','yacc.py',559),
  ('ebarateSade -> ebarateRabetei','ebarateSade',1,'p_ebarateSade_6','yacc.py',579),
  ('ebarateRabetei -> ebarateRiaziManteghi','ebarateRabetei',1,'p_ebarateRabetei_1','yacc.py',585),
  ('ebarateRabetei -> ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi','ebarateRabetei',3,'p_ebarateRabetei_2','yacc.py',591),
  ('amalgareRabetei -> LT','amalgareRabetei',1,'p_amalgareRabetei_1','yacc.py',601),
  ('amalgareRabetei -> GT','amalgareRabetei',1,'p_amalgareRabetei_2','yacc.py',607),
  ('amalgareRabetei -> GE','amalgareRabetei',1,'p_amalgareRabetei_3','yacc.py',613),
  ('amalgareRabetei -> LE','amalgareRabetei',1,'p_amalgareRabetei_4','yacc.py',619),
  ('amalgareRabetei -> EQ','amalgareRabetei',1,'p_amalgareRabetei_5','yacc.py',625),
  ('ebarateRiaziManteghi -> ebarateYegani','ebarateRiaziManteghi',1,'p_ebarateRiaziManteghi_1','yacc.py',631),
  ('ebarateRiaziManteghi -> ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi','ebarateRiaziManteghi',3,'p_ebarateRiaziManteghi_2','yacc.py',637),
  ('amalgareRiazi -> PLUS','amalgareRiazi',1,'p_amalgareRiazi_1','yacc.py',651),
  ('amalgareRiazi -> MINUS','amalgareRiazi',1,'p_amalgareRiazi_2','yacc.py',657),
  ('amalgareRiazi -> TIMES','amalgareRiazi',1,'p_amalgareRiazi_3','yacc.py',663),
  ('amalgareRiazi -> DIVIDE','amalgareRiazi',1,'p_amalgareRiazi_4','yacc.py',669),
  ('amalgareRiazi -> MOD','amalgareRiazi',1,'p_amalgareRiazi_5','yacc.py',675),
  ('ebarateYegani -> amalgareYegani ebarateYegani','ebarateYegani',2,'p_ebarateYegani_1','yacc.py',681),
  ('ebarateYegani -> amel','ebarateYegani',1,'p_ebarateYegani_2','yacc.py',687),
  ('amalgareYegani -> MINUS','amalgareYegani',1,'p_amalgareYegani_1','yacc.py',693),
  ('amalgareYegani -> TIMES','amalgareYegani',1,'p_amalgareYegani_2','yacc.py',699),
  ('amalgareYegani -> QUESTION_MARK','amalgareYegani',1,'p_amalgareYegani_3','yacc.py',705),
  ('amel -> taghirpazir','amel',1,'p_amel_1','yacc.py',711),
  ('amel -> taghirnapazir','amel',1,'p_amel_2','yacc.py',717),
  ('taghirpazir -> SHENASE','taghirpazir',1,'p_taghirpazir_1','yacc.py',723),
  ('taghirpazir -> taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET','taghirpazir',4,'p_taghirpazir_2','yacc.py',729),
  ('taghirpazir -> taghirpazir DOT SHENASE','taghirpazir',3,'p_taghirpazir_3','yacc.py',740),
  ('taghirnapazir -> OPEN_PAREN ebarat CLOSE_PAREN','taghirnapazir',3,'p_taghirnapazir_1','yacc.py',746),
  ('taghirnapazir -> sedaZadan','taghirnapazir',1,'p_taghirnapazir_2','yacc.py',752),
  ('taghirnapazir -> meghdareSabet','taghirnapazir',1,'p_taghirnapazir_3','yacc.py',758),
  ('sedaZadan -> SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN','sedaZadan',4,'p_sedaZadan','yacc.py',764),
  ('bordareVorudi -> bordareVorudiha','bordareVorudi',1,'p_bordareVorudi_1','yacc.py',770),
  ('bordareVorudi -> epsilon','bordareVorudi',1,'p_bordareVorudi_2','yacc.py',776),
  ('bordareVorudiha -> bordareVorudiha COMMA ebarat','bordareVorudiha',3,'p_bordareVorudiha_1','yacc.py',782),
  ('bordareVorudiha -> ebarat','bordareVorudiha',1,'p_bordareVorudiha_2','yacc.py',788),
  ('meghdareSabet -> INT','meghdareSabet',1,'p_meghdareSabet_1','yacc.py',794),
  ('meghdareSabet -> FLOAT','meghdareSabet',1,'p_meghdareSabet_2','yacc.py',801),
  ('meghdareSabet -> HARFE_SABET','meghdareSabet',1,'p_meghdareSabet_3','yacc.py',808),
  ('meghdareSabet -> TRUE_KW','meghdareSabet',1,'p_meghdareSabet_4','yacc.py',816),
  ('meghdareSabet -> FALSE_KW','meghdareSabet',1,'p_meghdareSabet_5','yacc.py',823),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','yacc.py',830),
]
