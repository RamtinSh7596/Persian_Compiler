
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_KWSHORT_CIRCUIT_OR_KWleftAND_KWSHORT_CIRCUIT_AND_KWleftEQleftLTGTLEGEleftPLUSMINUSleftMODleftTIMESDIVIDErightNOT_KWMINUS_MINUSPLUS_PLUSSHENASE INT FLOAT HARFE_SABET JAYEKHALI NOGHTE_VIRGUL COMMA COMMENT DOT PLUS MINUS TIMES DIVIDE MOD EQUALS PLUS_EQ MINUS_EQ TIMES_EQ DIVIDE_EQ COLON PLUS_PLUS MINUS_MINUS LT GT LE GE EQ OPEN_PAREN CLOSE_PAREN OPEN_BRACE CLOSE_BRACE OPEN_BRACKET CLOSE_BRACKET QUESTION_MARK PROGRAM_KW STRUCT_KW CONST_KW INT_KW FLOAT_KW BOOL_KW CHAR_KW IF_KW THEN_KW ELSE_KW SWITCH_KW END_KW CASE_KW DEFAULT_KW WHILE_KW RETURN_KW BREAK_KW OR_KW AND_KW SHORT_CIRCUIT_OR_KW SHORT_CIRCUIT_AND_KW NOT_KW TRUE_KW FALSE_KW MAIN barnameh : PROGRAM_KW SHENASE tarifha  tarifha : tarifha tarif  tarifha : tarif  tarif : tarifeSakhtar  tarif : tarifeMoteghayyer  tarif : tarifeTabe  tarifeSakhtar : STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE  tarifhayeMahalli : tarifhayeMahalli tarifMoteghayyereMahdud  tarifhayeMahalli : epsilon  tarifMoteghayyereMahdud : jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL  jenseMahdud : CONST_KW jens  jenseMahdud : jens  jens : INT_KW  jens : FLOAT_KW  jens : BOOL_KW  jens : CHAR_KW  tarifeMoteghayyer : jens tarifhayeMoteghayyerha NOGHTE_VIRGUL  tarifhayeMoteghayyerha : tarifeMeghdareAvvalie  tarifhayeMoteghayyerha : tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer EQUALS ebarateSade  tarifeShenaseyeMoteghayyer : SHENASE  tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET INT CLOSE_BRACKET  tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET FLOAT CLOSE_BRACKET  tarifeTabe : jens SHENASE   OPEN_PAREN  vorudi   CLOSE_PAREN  jomle  tarifeTabe : SHENASE   OPEN_PAREN  vorudi   CLOSE_PAREN  jomle  vorudi : vorudiha  vorudi : epsilon  vorudiha : vorudiha NOGHTE_VIRGUL jensVorudiha  vorudiha : jensVorudiha  jensVorudiha : jens shenaseyeVorudiha  shenaseyeVorudiha : shenaseyeVorudiha COMMA shenaseyeVorudi  shenaseyeVorudiha : shenaseyeVorudi  shenaseyeVorudi : SHENASE  shenaseyeVorudi : SHENASE OPEN_BRACKET CLOSE_BRACKET  jomle : jomleyeMorakkab  jomle : jomleyeEbarat  jomle : jomleyeEntekhab  jomle : jomleyeTekrar  jomle : jomleyeBazgasht  jomle : jomleyeShekast  jomleyeMorakkab : OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE  jomleha : jomleha jomle  jomleha : epsilon  jomleyeEbarat : ebarat NOGHTE_VIRGUL  jomleyeEbarat : NOGHTE_VIRGUL  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle  jomleyeEntekhab : SWITCH_KW OPEN_PAREN  ebarateSade CLOSE_PAREN  onsoreHalat onsorePishfarz END_KW  onsoreHalat : CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsorePishfarz : DEFAULT_KW COLON jomle NOGHTE_VIRGUL  onsorePishfarz :  epsilon  jomleyeTekrar : WHILE_KW OPEN_PAREN  ebarateSade   CLOSE_PAREN  jomle    jomleyeBazgasht :  RETURN_KW  NOGHTE_VIRGUL  jomleyeBazgasht : RETURN_KW ebarat NOGHTE_VIRGUL  jomleyeShekast : BREAK_KW NOGHTE_VIRGUL  ebarat : taghirpazir EQUALS ebarat  ebarat : taghirpazir PLUS_EQ ebarat  ebarat : taghirpazir MINUS_EQ ebarat  ebarat : taghirpazir TIMES_EQ ebarat  ebarat : taghirpazir DIVIDE_EQ ebarat  ebarat : taghirpazir PLUS_PLUS  ebarat : taghirpazir MINUS_MINUS  ebarat : ebarateSade  ebarateSade : ebarateSade OR_KW ebarateSade  ebarateSade : ebarateSade AND_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade  ebarateSade : NOT_KW ebarateSade  ebarateSade : ebarateRabetei  ebarateRabetei : ebarateRiaziManteghi  ebarateRabetei : ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi  amalgareRabetei : LT   amalgareRabetei : GT   amalgareRabetei : GE  amalgareRabetei : LE  amalgareRabetei : EQ  ebarateRiaziManteghi : ebarateYegani ebarateRiaziManteghi : ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi  amalgareRiazi : PLUS  amalgareRiazi : MINUS  amalgareRiazi : TIMES  amalgareRiazi : DIVIDE  amalgareRiazi : MOD  ebarateYegani : amalgareYegani ebarateYegani  ebarateYegani : amel  amalgareYegani : MINUS  amalgareYegani : TIMES  amalgareYegani : QUESTION_MARK  amel : taghirpazir  amel :  taghirnapazir  taghirpazir : SHENASE  taghirpazir : taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET taghirpazir : taghirpazir DOT SHENASE  taghirnapazir : OPEN_PAREN ebarat CLOSE_PAREN  taghirnapazir : sedaZadan taghirnapazir : meghdareSabet  sedaZadan : SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN  bordareVorudi : bordareVorudiha  bordareVorudi : epsilon  bordareVorudiha : bordareVorudiha COMMA ebarat bordareVorudiha : ebarat  meghdareSabet : INT  meghdareSabet :  FLOAT  meghdareSabet :  HARFE_SABET  meghdareSabet : TRUE_KW  meghdareSabet : FALSE_KW  epsilon : '
    
_lr_action_items = {'LT':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,101,-108,-93,-88,-97,-98,-82,-101,-96,]),'COLON':([176,177,181,185,186,],[182,183,187,190,191,]),'END_KW':([173,178,179,193,194,197,198,199,],[-111,-55,184,-50,-51,-54,-52,-53,]),'PLUS_PLUS':([47,79,142,164,],[-95,124,-97,-96,]),'LE':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,105,-108,-93,-88,-97,-98,-82,-101,-96,]),'TIMES':([33,34,40,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,72,75,76,77,78,79,80,87,92,95,96,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,142,143,144,145,150,151,152,158,161,162,163,164,165,166,167,169,171,174,175,182,183,184,187,190,191,],[49,49,-9,-109,-95,49,-91,-81,-90,49,-89,-93,-110,-100,-94,-99,49,-92,-107,-106,106,-108,-41,-37,-111,49,-39,-40,-38,-36,-46,-93,49,-8,49,49,-88,49,-76,-83,-87,-77,-79,-85,-84,49,-80,49,-78,-86,49,49,49,49,-111,-57,-45,-59,49,49,49,49,49,49,49,-97,-98,106,106,-44,49,-58,49,-10,49,-101,-96,-42,-43,-47,49,49,-56,-48,49,49,-49,49,49,49,]),'PROGRAM_KW':([0,],[2,]),'MINUS':([33,34,40,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,72,75,76,77,78,79,80,87,92,95,96,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,142,143,144,145,150,151,152,158,161,162,163,164,165,166,167,169,171,174,175,182,183,184,187,190,191,],[51,51,-9,-109,-95,51,-91,-81,-90,51,-89,-93,-110,-100,-94,-99,51,-92,-107,-106,107,-108,-41,-37,-111,51,-39,-40,-38,-36,-46,-93,51,-8,51,51,-88,51,-76,-83,-87,-77,-79,-85,-84,51,-80,51,-78,-86,51,51,51,51,-111,-57,-45,-59,51,51,51,51,51,51,51,-97,-98,107,107,-44,51,-58,51,-10,51,-101,-96,-42,-43,-47,51,51,-56,-48,51,51,-49,51,51,51,]),'CLOSE_BRACE':([28,39,40,67,68,69,72,75,76,77,78,87,117,118,120,121,150,151,152,161,165,166,167,174,175,184,],[-111,88,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,-111,-57,-45,-59,-44,165,-58,-10,-42,-43,-47,-56,-48,-49,]),'OPEN_BRACE':([17,34,40,67,68,69,72,75,76,77,78,87,92,117,118,120,121,150,151,152,158,161,165,166,167,169,171,174,175,182,183,184,187,190,191,],[28,69,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,69,-111,-57,-45,-59,-44,69,-58,69,-10,-42,-43,-47,69,69,-56,-48,69,69,-49,69,69,69,]),'NOT_KW':([33,34,40,53,60,67,68,69,70,72,75,76,77,78,80,87,92,95,98,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[53,53,-9,53,53,-41,-37,-111,53,-39,-40,-38,-36,-46,53,-8,53,53,53,53,53,53,53,-111,-57,-45,-59,53,53,53,53,53,53,53,-44,53,-58,53,-10,53,-42,-43,-47,53,53,-56,-48,53,53,-49,53,53,53,]),'RETURN_KW':([34,40,67,68,69,72,75,76,77,78,87,92,117,118,120,121,150,151,152,158,161,165,166,167,169,171,174,175,182,183,184,187,190,191,],[70,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,70,-111,-57,-45,-59,-44,70,-58,70,-10,-42,-43,-47,70,70,-56,-48,70,70,-49,70,70,70,]),'SHORT_CIRCUIT_AND_KW':([46,47,50,52,54,55,56,57,58,59,62,63,64,65,66,79,81,96,97,129,142,143,144,145,146,147,148,149,159,160,163,164,],[-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,115,-93,115,-88,-72,115,-97,-98,-75,-82,115,115,-71,-69,115,115,-101,-96,]),'STRUCT_KW':([3,5,8,12,13,14,22,32,67,68,72,74,75,76,77,78,88,118,120,121,136,152,165,167,174,175,184,],[7,-6,-5,-3,7,-4,-2,-17,-41,-37,-39,-26,-40,-38,-36,-46,-7,-57,-45,-59,-25,-58,-42,-47,-56,-48,-49,]),'EQ':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,109,-108,-93,-88,-97,-98,-82,-101,-96,]),'DIVIDE':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,144,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,112,-108,-93,-88,-97,-98,112,112,-101,-96,]),'CLOSE_BRACKET':([42,43,46,47,50,52,54,55,56,57,58,59,62,63,64,65,79,81,84,96,97,123,124,141,142,143,144,145,146,147,148,149,153,154,155,156,157,163,164,],[93,94,-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,-93,-67,132,-88,-72,-66,-65,164,-97,-98,-75,-82,-70,-68,-71,-69,-62,-60,-61,-63,-64,-101,-96,]),'CHAR_KW':([3,5,8,12,13,14,16,22,28,29,32,38,39,40,67,68,69,72,74,75,76,77,78,87,88,89,117,118,120,121,136,152,161,165,167,174,175,184,],[11,-6,-5,-3,11,-4,11,-2,-111,11,-17,11,11,-9,-41,-37,-111,-39,-26,-40,-38,-36,-46,-8,-7,11,11,-57,-45,-59,-25,-58,-10,-42,-47,-56,-48,-49,]),'OPEN_BRACKET':([18,35,44,47,55,79,142,164,],[30,84,30,-95,98,98,-97,-96,]),'BREAK_KW':([34,40,67,68,69,72,75,76,77,78,87,92,117,118,120,121,150,151,152,158,161,165,166,167,169,171,174,175,182,183,184,187,190,191,],[73,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,73,-111,-57,-45,-59,-44,73,-58,73,-10,-42,-43,-47,73,73,-56,-48,73,73,-49,73,73,73,]),'FALSE_KW':([33,34,40,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[56,56,-9,56,-91,-90,56,56,-92,-41,-37,-111,56,-39,-40,-38,-36,-46,56,-8,56,56,56,-76,-83,-87,-77,-79,-85,-84,56,-80,56,-78,-86,56,56,56,56,-111,-57,-45,-59,56,56,56,56,56,56,56,-44,56,-58,56,-10,56,-42,-43,-47,56,56,-56,-48,56,56,-49,56,56,56,]),'OR_KW':([46,47,50,52,54,55,56,57,58,59,62,63,64,65,66,79,81,96,97,129,142,143,144,145,146,147,148,149,159,160,163,164,],[-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,114,-93,114,-88,-72,114,-97,-98,-75,-82,-70,-68,-71,-69,114,114,-101,-96,]),'EQUALS':([18,21,44,47,79,93,94,142,164,],[-22,33,-22,-95,125,-23,-24,-97,-96,]),'QUESTION_MARK':([33,34,40,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[61,61,-9,61,-91,-90,61,61,-92,-41,-37,-111,61,-39,-40,-38,-36,-46,61,-8,61,61,61,-76,-83,-87,-77,-79,-85,-84,61,-80,61,-78,-86,61,61,61,61,-111,-57,-45,-59,61,61,61,61,61,61,61,-44,61,-58,61,-10,61,-42,-43,-47,61,61,-56,-48,61,61,-49,61,61,61,]),'FLOAT_KW':([3,5,8,12,13,14,16,22,28,29,32,38,39,40,67,68,69,72,74,75,76,77,78,87,88,89,117,118,120,121,136,152,161,165,167,174,175,184,],[10,-6,-5,-3,10,-4,10,-2,-111,10,-17,10,10,-9,-41,-37,-111,-39,-26,-40,-38,-36,-46,-8,-7,10,10,-57,-45,-59,-25,-58,-10,-42,-47,-56,-48,-49,]),'INT':([30,33,34,40,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,172,174,175,180,182,183,184,187,190,191,],[42,63,63,-9,63,-91,-90,63,63,-92,-41,-37,-111,63,-39,-40,-38,-36,-46,63,-8,63,63,63,-76,-83,-87,-77,-79,-85,-84,63,-80,63,-78,-86,63,63,63,63,-111,-57,-45,-59,63,63,63,63,63,63,63,-44,63,-58,63,-10,63,-42,-43,-47,63,63,176,-56,-48,185,63,63,-49,63,63,63,]),'HARFE_SABET':([33,34,40,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[65,65,-9,65,-91,-90,65,65,-92,-41,-37,-111,65,-39,-40,-38,-36,-46,65,-8,65,65,65,-76,-83,-87,-77,-79,-85,-84,65,-80,65,-78,-86,65,65,65,65,-111,-57,-45,-59,65,65,65,65,65,65,65,-44,65,-58,65,-10,65,-42,-43,-47,65,65,-56,-48,65,65,-49,65,65,65,]),'MOD':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,144,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,103,-108,-93,-88,-97,-98,103,103,-101,-96,]),'COMMA':([18,19,20,21,35,36,37,44,45,46,47,50,52,54,55,56,57,58,59,62,63,64,65,66,79,81,93,94,96,97,123,124,132,133,135,138,139,142,143,144,145,146,147,148,149,153,154,155,156,157,163,164,170,],[-22,-18,31,-20,-34,85,-33,-22,-19,-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,-21,-93,-67,-23,-24,-88,-72,-66,-65,-35,-32,31,162,-105,-97,-98,-75,-82,-70,-68,-71,-69,-62,-60,-61,-63,-64,-101,-96,-104,]),'FLOAT':([30,33,34,40,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,172,174,175,180,182,183,184,187,190,191,],[43,62,62,-9,62,-91,-90,62,62,-92,-41,-37,-111,62,-39,-40,-38,-36,-46,62,-8,62,62,62,-76,-83,-87,-77,-79,-85,-84,62,-80,62,-78,-86,62,62,62,62,-111,-57,-45,-59,62,62,62,62,62,62,62,-44,62,-58,62,-10,62,-42,-43,-47,62,62,177,-56,-48,186,62,62,-49,62,62,62,]),'GT':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,104,-108,-93,-88,-97,-98,-82,-101,-96,]),'SHENASE':([2,3,5,6,7,8,9,10,11,12,13,14,15,22,26,31,32,33,34,40,48,49,51,53,60,61,67,68,69,70,72,74,75,76,77,78,80,85,87,88,90,91,92,95,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,134,136,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[3,4,-6,-13,17,-5,18,-14,-16,-3,4,-4,-15,-2,35,44,-17,47,47,-9,47,-91,-90,47,47,-92,-41,-37,-111,47,-39,-26,-40,-38,-36,-46,47,35,-8,-7,44,-12,47,47,47,142,-76,-83,-87,-77,-79,-85,-84,47,-80,47,-78,-86,47,47,47,47,-111,-57,-45,-59,47,47,47,47,47,47,47,-11,-25,-44,47,-58,47,-10,47,-42,-43,-47,47,47,-56,-48,47,47,-49,47,47,47,]),'NOGHTE_VIRGUL':([18,19,20,21,25,27,34,35,36,37,40,44,45,46,47,50,52,54,55,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,81,86,87,92,93,94,96,97,117,118,119,120,121,123,124,132,133,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,163,164,165,166,167,169,171,174,175,182,183,184,187,188,189,190,191,192,195,196,],[-22,-18,32,-20,-30,38,78,-34,-31,-33,-9,-22,-19,-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,-21,-41,-37,-111,118,120,-39,121,-40,-38,-36,-46,-93,-67,-29,-8,78,-23,-24,-88,-72,-111,-57,152,-45,-59,-66,-65,-35,-32,161,-97,-98,-75,-82,-70,-68,-71,-69,-44,78,-58,-62,-60,-61,-63,-64,78,-10,-101,-96,-42,-43,-47,78,78,-56,-48,78,78,-49,78,193,194,78,78,197,198,199,]),'CASE_KW':([168,173,193,194,198,199,],[172,180,-50,-51,-52,-53,]),'SHORT_CIRCUIT_OR_KW':([46,47,50,52,54,55,56,57,58,59,62,63,64,65,66,79,81,96,97,129,142,143,144,145,146,147,148,149,159,160,163,164,],[-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,113,-93,113,-88,-72,113,-97,-98,-75,-82,-70,-68,-71,-69,113,113,-101,-96,]),'TRUE_KW':([33,34,40,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[46,46,-9,46,-91,-90,46,46,-92,-41,-37,-111,46,-39,-40,-38,-36,-46,46,-8,46,46,46,-76,-83,-87,-77,-79,-85,-84,46,-80,46,-78,-86,46,46,46,46,-111,-57,-45,-59,46,46,46,46,46,46,46,-44,46,-58,46,-10,46,-42,-43,-47,46,46,-56,-48,46,46,-49,46,46,46,]),'PLUS_EQ':([47,79,142,164,],[-95,126,-97,-96,]),'ELSE_KW':([67,68,72,75,76,77,78,118,120,121,152,165,167,174,175,184,],[-41,-37,-39,-40,-38,-36,-46,-57,-45,-59,-58,-42,171,-56,-48,-49,]),'THEN_KW':([46,47,50,52,54,55,56,57,58,59,62,63,64,65,96,97,129,142,143,144,145,146,147,148,149,163,164,],[-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,-88,-72,158,-97,-98,-75,-82,-70,-68,-71,-69,-101,-96,]),'CLOSE_PAREN':([16,23,24,25,27,29,35,36,37,41,46,47,50,52,54,55,56,57,58,59,62,63,64,65,79,81,86,95,96,97,100,123,124,132,133,137,138,139,140,142,143,144,145,146,147,148,149,153,154,155,156,157,159,160,163,164,170,],[-111,-28,34,-30,-27,-111,-34,-31,-33,92,-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,-93,-67,-29,-111,-88,-72,143,-66,-65,-35,-32,-103,-102,-105,163,-97,-98,-75,-82,-70,-68,-71,-69,-62,-60,-61,-63,-64,168,169,-101,-96,-104,]),'TIMES_EQ':([47,79,142,164,],[-95,127,-97,-96,]),'MINUS_EQ':([47,79,142,164,],[-95,122,-97,-96,]),'MINUS_MINUS':([47,79,142,164,],[-95,123,-97,-96,]),'INT_KW':([3,5,8,12,13,14,16,22,28,29,32,38,39,40,67,68,69,72,74,75,76,77,78,87,88,89,117,118,120,121,136,152,161,165,167,174,175,184,],[6,-6,-5,-3,6,-4,6,-2,-111,6,-17,6,6,-9,-41,-37,-111,-39,-26,-40,-38,-36,-46,-8,-7,6,6,-57,-45,-59,-25,-58,-10,-42,-47,-56,-48,-49,]),'PLUS':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,144,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,102,-108,-93,-88,-97,-98,102,102,-101,-96,]),'AND_KW':([46,47,50,52,54,55,56,57,58,59,62,63,64,65,66,79,81,96,97,129,142,143,144,145,146,147,148,149,159,160,163,164,],[-109,-95,-81,-73,-89,-93,-110,-100,-94,-99,-107,-106,-74,-108,116,-93,116,-88,-72,116,-97,-98,-75,-82,116,116,-71,-69,116,116,-101,-96,]),'DOT':([47,55,79,142,164,],[-95,99,99,-97,-96,]),'OPEN_PAREN':([4,18,33,34,40,47,48,49,51,53,60,61,67,68,69,70,72,75,76,77,78,80,82,83,87,92,95,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,126,127,128,130,131,150,151,152,158,161,162,165,166,167,169,171,174,175,182,183,184,187,190,191,],[16,29,60,60,-9,95,60,-91,-90,60,60,-92,-41,-37,-111,60,-39,-40,-38,-36,-46,60,130,131,-8,60,60,60,-76,-83,-87,-77,-79,-85,-84,60,-80,60,-78,-86,60,60,60,60,-111,-57,-45,-59,60,60,60,60,60,60,60,-44,60,-58,60,-10,60,-42,-43,-47,60,60,-56,-48,60,60,-49,60,60,60,]),'CONST_KW':([28,39,40,69,87,117,161,],[-111,89,-9,-111,-8,89,-10,]),'SWITCH_KW':([34,40,67,68,69,72,75,76,77,78,87,92,117,118,120,121,150,151,152,158,161,165,166,167,169,171,174,175,182,183,184,187,190,191,],[82,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,82,-111,-57,-45,-59,-44,82,-58,82,-10,-42,-43,-47,82,82,-56,-48,82,82,-49,82,82,82,]),'WHILE_KW':([34,40,67,68,69,72,75,76,77,78,87,92,117,118,120,121,150,151,152,158,161,165,166,167,169,171,174,175,182,183,184,187,190,191,],[83,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,83,-111,-57,-45,-59,-44,83,-58,83,-10,-42,-43,-47,83,83,-56,-48,83,83,-49,83,83,83,]),'GE':([46,47,50,54,55,56,57,58,59,62,63,64,65,79,96,142,143,145,163,164,],[-109,-95,-81,-89,-93,-110,-100,-94,-99,-107,-106,111,-108,-93,-88,-97,-98,-82,-101,-96,]),'DEFAULT_KW':([173,193,194,198,199,],[181,-50,-51,-52,-53,]),'IF_KW':([34,40,67,68,69,72,75,76,77,78,87,92,117,118,120,121,150,151,152,158,161,165,166,167,169,171,174,175,182,183,184,187,190,191,],[80,-9,-41,-37,-111,-39,-40,-38,-36,-46,-8,80,-111,-57,-45,-59,-44,80,-58,80,-10,-42,-43,-47,80,80,-56,-48,80,80,-49,80,80,80,]),'BOOL_KW':([3,5,8,12,13,14,16,22,28,29,32,38,39,40,67,68,69,72,74,75,76,77,78,87,88,89,117,118,120,121,136,152,161,165,167,174,175,184,],[15,-6,-5,-3,15,-4,15,-2,-111,15,-17,15,15,-9,-41,-37,-111,-39,-26,-40,-38,-36,-46,-8,-7,15,15,-57,-45,-59,-25,-58,-10,-42,-47,-56,-48,-49,]),'DIVIDE_EQ':([47,79,142,164,],[-95,128,-97,-96,]),'$end':([1,5,8,12,13,14,22,32,67,68,72,74,75,76,77,78,88,118,120,121,136,152,165,167,174,175,184,],[0,-6,-5,-3,-1,-4,-2,-17,-41,-37,-39,-26,-40,-38,-36,-46,-7,-57,-45,-59,-25,-58,-42,-47,-56,-48,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'epsilon':([16,28,29,69,95,117,173,],[23,40,23,40,137,150,178,]),'jomleyeEbarat':([34,92,151,158,169,171,182,183,187,190,191,],[68,68,68,68,68,68,68,68,68,68,68,]),'onsorePishfarz':([173,],[179,]),'shenaseyeVorudiha':([26,],[36,]),'amel':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'jomleyeShekast':([34,92,151,158,169,171,182,183,187,190,191,],[67,67,67,67,67,67,67,67,67,67,67,]),'tarifhayeMoteghayyerha':([9,90,],[20,135,]),'meghdareSabet':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ebarat':([34,60,70,92,95,98,122,125,126,127,128,151,158,162,169,171,182,183,187,190,191,],[71,100,119,71,139,141,153,154,155,156,157,71,71,170,71,71,71,71,71,71,71,]),'tarifeShenaseyeMoteghayyer':([9,31,90,],[21,21,21,]),'tarifeMoteghayyer':([3,13,],[8,8,]),'jensVorudiha':([16,29,38,],[25,25,86,]),'tarifeSakhtar':([3,13,],[14,14,]),'tarifhayeMahalli':([28,69,],[39,117,]),'sedaZadan':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'jomleyeTekrar':([34,92,151,158,169,171,182,183,187,190,191,],[72,72,72,72,72,72,72,72,72,72,72,]),'jomleyeBazgasht':([34,92,151,158,169,171,182,183,187,190,191,],[75,75,75,75,75,75,75,75,75,75,75,]),'tarifha':([3,],[13,]),'tarifMoteghayyereMahdud':([39,117,],[87,87,]),'onsoreHalat':([168,],[173,]),'jomle':([34,92,151,158,169,171,182,183,187,190,191,],[74,136,166,167,174,175,188,189,192,195,196,]),'ebarateRabetei':([33,34,53,60,70,80,92,95,98,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'jomleyeEntekhab':([34,92,151,158,169,171,182,183,187,190,191,],[76,76,76,76,76,76,76,76,76,76,76,]),'jenseMahdud':([39,117,],[90,90,]),'barnameh':([0,],[1,]),'bordareVorudiha':([95,],[138,]),'vorudiha':([16,29,],[27,27,]),'amalgareYegani':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'tarifeMeghdareAvvalie':([9,31,90,],[19,45,19,]),'ebarateYegani':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[50,50,96,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'tarifeTabe':([3,13,],[5,5,]),'vorudi':([16,29,],[24,41,]),'tarif':([3,13,],[12,22,]),'amalgareRabetei':([64,],[108,]),'jens':([3,13,16,29,38,39,89,117,],[9,9,26,26,26,91,134,91,]),'shenaseyeVorudi':([26,85,],[37,133,]),'taghirpazir':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[55,79,55,55,79,79,55,79,79,79,55,55,55,55,55,55,79,79,79,79,79,55,55,79,79,79,79,79,79,79,79,79,79,]),'jomleha':([117,],[151,]),'bordareVorudi':([95,],[140,]),'taghirnapazir':([33,34,48,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'jomleyeMorakkab':([34,92,151,158,169,171,182,183,187,190,191,],[77,77,77,77,77,77,77,77,77,77,77,]),'ebarateRiaziManteghi':([33,34,53,60,70,80,92,95,98,108,110,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[64,64,64,64,64,64,64,64,64,144,145,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'amalgareRiazi':([64,144,145,],[110,110,110,]),'ebarateSade':([33,34,53,60,70,80,92,95,98,113,114,115,116,122,125,126,127,128,130,131,151,158,162,169,171,182,183,187,190,191,],[66,81,97,81,81,129,81,81,81,146,147,148,149,81,81,81,81,81,159,160,81,81,81,81,81,81,81,81,81,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> barnameh","S'",1,None,None,None),
  ('barnameh -> PROGRAM_KW SHENASE tarifha','barnameh',3,'p_barnameh','yacc.py',21),
  ('tarifha -> tarifha tarif','tarifha',2,'p_tarifha_1','yacc.py',26),
  ('tarifha -> tarif','tarifha',1,'p_tarifha_2','yacc.py',31),
  ('tarif -> tarifeSakhtar','tarif',1,'p_tarif_1','yacc.py',36),
  ('tarif -> tarifeMoteghayyer','tarif',1,'p_tarif_2','yacc.py',41),
  ('tarif -> tarifeTabe','tarif',1,'p_tarif_3','yacc.py',46),
  ('tarifeSakhtar -> STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE','tarifeSakhtar',5,'p_tarifeSakhtar','yacc.py',51),
  ('tarifhayeMahalli -> tarifhayeMahalli tarifMoteghayyereMahdud','tarifhayeMahalli',2,'p_tarifhayeMahalli_1','yacc.py',56),
  ('tarifhayeMahalli -> epsilon','tarifhayeMahalli',1,'p_tarifhayeMahalli_2','yacc.py',61),
  ('tarifMoteghayyereMahdud -> jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifMoteghayyereMahdud',3,'p_tarifMoteghayyereMahdud','yacc.py',66),
  ('jenseMahdud -> CONST_KW jens','jenseMahdud',2,'p_jenseMahdud_1','yacc.py',71),
  ('jenseMahdud -> jens','jenseMahdud',1,'p_jenseMahdud_2','yacc.py',76),
  ('jens -> INT_KW','jens',1,'p_jens_1','yacc.py',81),
  ('jens -> FLOAT_KW','jens',1,'p_jens_2','yacc.py',87),
  ('jens -> BOOL_KW','jens',1,'p_jens_3','yacc.py',93),
  ('jens -> CHAR_KW','jens',1,'p_jens_4','yacc.py',99),
  ('tarifeMoteghayyer -> jens tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifeMoteghayyer',3,'p_tarifeMoteghayyer','yacc.py',105),
  ('tarifhayeMoteghayyerha -> tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',1,'p_tarifhayeMoteghayyerha_1','yacc.py',114),
  ('tarifhayeMoteghayyerha -> tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',3,'p_tarifhayeMoteghayyerha_2','yacc.py',119),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer','tarifeMeghdareAvvalie',1,'p_tarifeMeghdareAvvalie_1','yacc.py',124),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer EQUALS ebarateSade','tarifeMeghdareAvvalie',3,'p_tarifeMeghdareAvvalie_2','yacc.py',134),
  ('tarifeShenaseyeMoteghayyer -> SHENASE','tarifeShenaseyeMoteghayyer',1,'p_tarifeShenaseyeMoteghayyer_1','yacc.py',139),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET INT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_2','yacc.py',145),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET FLOAT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_3','yacc.py',150),
  ('tarifeTabe -> jens SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',6,'p_tarifeTabe_1','yacc.py',155),
  ('tarifeTabe -> SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',5,'p_tarifeTabe_2','yacc.py',160),
  ('vorudi -> vorudiha','vorudi',1,'p_vorudi_1','yacc.py',165),
  ('vorudi -> epsilon','vorudi',1,'p_vorudi_2','yacc.py',170),
  ('vorudiha -> vorudiha NOGHTE_VIRGUL jensVorudiha','vorudiha',3,'p_vorudiha_1','yacc.py',175),
  ('vorudiha -> jensVorudiha','vorudiha',1,'p_vorudiha_2','yacc.py',180),
  ('jensVorudiha -> jens shenaseyeVorudiha','jensVorudiha',2,'p_jensVorudiha','yacc.py',185),
  ('shenaseyeVorudiha -> shenaseyeVorudiha COMMA shenaseyeVorudi','shenaseyeVorudiha',3,'p_shenaseyeVorudiha_1','yacc.py',190),
  ('shenaseyeVorudiha -> shenaseyeVorudi','shenaseyeVorudiha',1,'p_shenaseyeVorudiha_2','yacc.py',195),
  ('shenaseyeVorudi -> SHENASE','shenaseyeVorudi',1,'p_shenaseyeVorudi_1','yacc.py',200),
  ('shenaseyeVorudi -> SHENASE OPEN_BRACKET CLOSE_BRACKET','shenaseyeVorudi',3,'p_shenaseyeVorudi_2','yacc.py',205),
  ('jomle -> jomleyeMorakkab','jomle',1,'p_jomle_1','yacc.py',210),
  ('jomle -> jomleyeEbarat','jomle',1,'p_jomle_2','yacc.py',215),
  ('jomle -> jomleyeEntekhab','jomle',1,'p_jomle_3','yacc.py',220),
  ('jomle -> jomleyeTekrar','jomle',1,'p_jomle_4','yacc.py',225),
  ('jomle -> jomleyeBazgasht','jomle',1,'p_jomle_5','yacc.py',230),
  ('jomle -> jomleyeShekast','jomle',1,'p_jomle_6','yacc.py',235),
  ('jomleyeMorakkab -> OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE','jomleyeMorakkab',4,'p_jomleyeMorakkab','yacc.py',240),
  ('jomleha -> jomleha jomle','jomleha',2,'p_jomleha_1','yacc.py',245),
  ('jomleha -> epsilon','jomleha',1,'p_jomleha_2','yacc.py',250),
  ('jomleyeEbarat -> ebarat NOGHTE_VIRGUL','jomleyeEbarat',2,'p_jomleyeEbarat_1','yacc.py',255),
  ('jomleyeEbarat -> NOGHTE_VIRGUL','jomleyeEbarat',1,'p_jomleyeEbarat_2','yacc.py',260),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle','jomleyeEntekhab',4,'p_jomleyeEntekhab_1','yacc.py',265),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle','jomleyeEntekhab',6,'p_jomleyeEntekhab_2','yacc.py',270),
  ('jomleyeEntekhab -> SWITCH_KW OPEN_PAREN ebarateSade CLOSE_PAREN onsoreHalat onsorePishfarz END_KW','jomleyeEntekhab',7,'p_jomleyeEntekhab_3','yacc.py',275),
  ('onsoreHalat -> CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_1','yacc.py',281),
  ('onsoreHalat -> CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_2','yacc.py',286),
  ('onsoreHalat -> onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_3','yacc.py',291),
  ('onsoreHalat -> onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_4','yacc.py',296),
  ('onsorePishfarz -> DEFAULT_KW COLON jomle NOGHTE_VIRGUL','onsorePishfarz',4,'p_onsorePishfarz_1','yacc.py',301),
  ('onsorePishfarz -> epsilon','onsorePishfarz',1,'p_onsorePishfarz_2','yacc.py',306),
  ('jomleyeTekrar -> WHILE_KW OPEN_PAREN ebarateSade CLOSE_PAREN jomle','jomleyeTekrar',5,'p_jomleyeTekrar','yacc.py',311),
  ('jomleyeBazgasht -> RETURN_KW NOGHTE_VIRGUL','jomleyeBazgasht',2,'p_jomleyeBazgasht_1','yacc.py',316),
  ('jomleyeBazgasht -> RETURN_KW ebarat NOGHTE_VIRGUL','jomleyeBazgasht',3,'p_jomleyeBazgasht_2','yacc.py',321),
  ('jomleyeShekast -> BREAK_KW NOGHTE_VIRGUL','jomleyeShekast',2,'p_jomleyeShekast','yacc.py',326),
  ('ebarat -> taghirpazir EQUALS ebarat','ebarat',3,'p_ebarat_1','yacc.py',331),
  ('ebarat -> taghirpazir PLUS_EQ ebarat','ebarat',3,'p_ebarat_2','yacc.py',342),
  ('ebarat -> taghirpazir MINUS_EQ ebarat','ebarat',3,'p_ebarat_3','yacc.py',348),
  ('ebarat -> taghirpazir TIMES_EQ ebarat','ebarat',3,'p_ebarat_4','yacc.py',354),
  ('ebarat -> taghirpazir DIVIDE_EQ ebarat','ebarat',3,'p_ebarat_5','yacc.py',360),
  ('ebarat -> taghirpazir PLUS_PLUS','ebarat',2,'p_ebarat_6','yacc.py',366),
  ('ebarat -> taghirpazir MINUS_MINUS','ebarat',2,'p_ebarat_7','yacc.py',371),
  ('ebarat -> ebarateSade','ebarat',1,'p_ebarat_8','yacc.py',376),
  ('ebarateSade -> ebarateSade OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_1','yacc.py',382),
  ('ebarateSade -> ebarateSade AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_2','yacc.py',387),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_3','yacc.py',392),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_4','yacc.py',397),
  ('ebarateSade -> NOT_KW ebarateSade','ebarateSade',2,'p_ebarateSade_5','yacc.py',402),
  ('ebarateSade -> ebarateRabetei','ebarateSade',1,'p_ebarateSade_6','yacc.py',407),
  ('ebarateRabetei -> ebarateRiaziManteghi','ebarateRabetei',1,'p_ebarateRabetei_1','yacc.py',413),
  ('ebarateRabetei -> ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi','ebarateRabetei',3,'p_ebarateRabetei_2','yacc.py',419),
  ('amalgareRabetei -> LT','amalgareRabetei',1,'p_amalgareRabetei_1','yacc.py',424),
  ('amalgareRabetei -> GT','amalgareRabetei',1,'p_amalgareRabetei_2','yacc.py',429),
  ('amalgareRabetei -> GE','amalgareRabetei',1,'p_amalgareRabetei_3','yacc.py',434),
  ('amalgareRabetei -> LE','amalgareRabetei',1,'p_amalgareRabetei_4','yacc.py',439),
  ('amalgareRabetei -> EQ','amalgareRabetei',1,'p_amalgareRabetei_5','yacc.py',444),
  ('ebarateRiaziManteghi -> ebarateYegani','ebarateRiaziManteghi',1,'p_ebarateRiaziManteghi_1','yacc.py',449),
  ('ebarateRiaziManteghi -> ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi','ebarateRiaziManteghi',3,'p_ebarateRiaziManteghi_2','yacc.py',455),
  ('amalgareRiazi -> PLUS','amalgareRiazi',1,'p_amalgareRiazi_1','yacc.py',460),
  ('amalgareRiazi -> MINUS','amalgareRiazi',1,'p_amalgareRiazi_2','yacc.py',465),
  ('amalgareRiazi -> TIMES','amalgareRiazi',1,'p_amalgareRiazi_3','yacc.py',470),
  ('amalgareRiazi -> DIVIDE','amalgareRiazi',1,'p_amalgareRiazi_4','yacc.py',475),
  ('amalgareRiazi -> MOD','amalgareRiazi',1,'p_amalgareRiazi_5','yacc.py',480),
  ('ebarateYegani -> amalgareYegani ebarateYegani','ebarateYegani',2,'p_ebarateYegani_1','yacc.py',485),
  ('ebarateYegani -> amel','ebarateYegani',1,'p_ebarateYegani_2','yacc.py',490),
  ('amalgareYegani -> MINUS','amalgareYegani',1,'p_amalgareYegani_1','yacc.py',496),
  ('amalgareYegani -> TIMES','amalgareYegani',1,'p_amalgareYegani_2','yacc.py',501),
  ('amalgareYegani -> QUESTION_MARK','amalgareYegani',1,'p_amalgareYegani_3','yacc.py',506),
  ('amel -> taghirpazir','amel',1,'p_amel_1','yacc.py',511),
  ('amel -> taghirnapazir','amel',1,'p_amel_2','yacc.py',517),
  ('taghirpazir -> SHENASE','taghirpazir',1,'p_taghirpazir_1','yacc.py',523),
  ('taghirpazir -> taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET','taghirpazir',4,'p_taghirpazir_2','yacc.py',529),
  ('taghirpazir -> taghirpazir DOT SHENASE','taghirpazir',3,'p_taghirpazir_3','yacc.py',534),
  ('taghirnapazir -> OPEN_PAREN ebarat CLOSE_PAREN','taghirnapazir',3,'p_taghirnapazir_1','yacc.py',539),
  ('taghirnapazir -> sedaZadan','taghirnapazir',1,'p_taghirnapazir_2','yacc.py',544),
  ('taghirnapazir -> meghdareSabet','taghirnapazir',1,'p_taghirnapazir_3','yacc.py',549),
  ('sedaZadan -> SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN','sedaZadan',4,'p_sedaZadan','yacc.py',555),
  ('bordareVorudi -> bordareVorudiha','bordareVorudi',1,'p_bordareVorudi_1','yacc.py',560),
  ('bordareVorudi -> epsilon','bordareVorudi',1,'p_bordareVorudi_2','yacc.py',565),
  ('bordareVorudiha -> bordareVorudiha COMMA ebarat','bordareVorudiha',3,'p_bordareVorudiha_1','yacc.py',570),
  ('bordareVorudiha -> ebarat','bordareVorudiha',1,'p_bordareVorudiha_2','yacc.py',575),
  ('meghdareSabet -> INT','meghdareSabet',1,'p_meghdareSabet_1','yacc.py',580),
  ('meghdareSabet -> FLOAT','meghdareSabet',1,'p_meghdareSabet_2','yacc.py',587),
  ('meghdareSabet -> HARFE_SABET','meghdareSabet',1,'p_meghdareSabet_3','yacc.py',593),
  ('meghdareSabet -> TRUE_KW','meghdareSabet',1,'p_meghdareSabet_4','yacc.py',599),
  ('meghdareSabet -> FALSE_KW','meghdareSabet',1,'p_meghdareSabet_5','yacc.py',605),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','yacc.py',611),
]
