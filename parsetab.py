
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_KWSHORT_CIRCUIT_OR_KWleftAND_KWSHORT_CIRCUIT_AND_KWleftEQleftLTGTLEGEleftPLUSMINUSleftMODleftTIMESDIVIDErightNOT_KWMINUS_MINUSPLUS_PLUSSHENASE INT FLOAT HARFE_SABET JAYEKHALI NOGHTE_VIRGUL COMMA COMMENT DOT PLUS MINUS TIMES DIVIDE MOD EQUALS PLUS_EQ MINUS_EQ TIMES_EQ DIVIDE_EQ COLON PLUS_PLUS MINUS_MINUS LT GT LE GE EQ OPEN_PAREN CLOSE_PAREN OPEN_BRACE CLOSE_BRACE OPEN_BRACKET CLOSE_BRACKET QUESTION_MARK PROGRAM_KW STRUCT_KW CONST_KW INT_KW FLOAT_KW BOOL_KW CHAR_KW IF_KW THEN_KW ELSE_KW SWITCH_KW END_KW CASE_KW DEFAULT_KW WHILE_KW RETURN_KW BREAK_KW OR_KW AND_KW SHORT_CIRCUIT_OR_KW SHORT_CIRCUIT_AND_KW NOT_KW TRUE_KW FALSE_KW MAIN barnameh : PROGRAM_KW SHENASE tarifha  tarifha : tarifha tarif  tarifha : tarif  tarif : tarifeSakhtar  tarif : tarifeMoteghayyer  tarif : tarifeTabe  tarifeSakhtar : STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE  tarifhayeMahalli : tarifhayeMahalli tarifMoteghayyereMahdud  tarifhayeMahalli : epsilon  tarifMoteghayyereMahdud : jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL  jenseMahdud : CONST_KW jens  jenseMahdud : jens  jens : INT_KW  jens : FLOAT_KW  jens : BOOL_KW  jens : CHAR_KW  tarifeMoteghayyer : jens tarifhayeMoteghayyerha NOGHTE_VIRGUL  tarifhayeMoteghayyerha : tarifeMeghdareAvvalie  tarifhayeMoteghayyerha : tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer EQUALS ebarateSade  tarifeShenaseyeMoteghayyer : SHENASE  tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET INT CLOSE_BRACKET  tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET FLOAT CLOSE_BRACKET  tarifeTabe : jens SHENASE   OPEN_PAREN  vorudi   CLOSE_PAREN  jomle  tarifeTabe : SHENASE   OPEN_PAREN  vorudi   CLOSE_PAREN  jomle  vorudi : vorudiha  vorudi : epsilon  vorudiha : vorudiha NOGHTE_VIRGUL jensVorudiha  vorudiha : jensVorudiha  jensVorudiha : jens shenaseyeVorudiha  shenaseyeVorudiha : shenaseyeVorudiha COMMA shenaseyeVorudi  shenaseyeVorudiha : shenaseyeVorudi  shenaseyeVorudi : SHENASE  shenaseyeVorudi : SHENASE OPEN_BRACKET CLOSE_BRACKET  jomle : jomleyeMorakkab  jomle : jomleyeEbarat  jomle : jomleyeEntekhab  jomle : jomleyeTekrar  jomle : jomleyeBazgasht  jomle : jomleyeShekast  jomleyeMorakkab : OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE  jomleha : jomleha jomle  jomleha : epsilon  jomleyeEbarat : ebarat NOGHTE_VIRGUL  jomleyeEbarat : NOGHTE_VIRGUL  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle  jomleyeEntekhab : SWITCH_KW OPEN_PAREN  ebarateSade CLOSE_PAREN  onsoreHalat onsorePishfarz END_KW  onsoreHalat : CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsorePishfarz : DEFAULT_KW COLON jomle NOGHTE_VIRGUL  onsorePishfarz :  epsilon  jomleyeTekrar : WHILE_KW OPEN_PAREN  ebarateSade   CLOSE_PAREN  jomle    jomleyeBazgasht :  RETURN_KW  NOGHTE_VIRGUL  jomleyeBazgasht : RETURN_KW ebarat NOGHTE_VIRGUL  jomleyeShekast : BREAK_KW NOGHTE_VIRGUL  ebarat : taghirpazir EQUALS ebarat  ebarat : taghirpazir PLUS_EQ ebarat  ebarat : taghirpazir MINUS_EQ ebarat  ebarat : taghirpazir TIMES_EQ ebarat  ebarat : taghirpazir DIVIDE_EQ ebarat  ebarat : taghirpazir PLUS_PLUS ebarat : taghirpazir MINUS_MINUS  ebarat : ebarateSade  ebarateSade : ebarateSade OR_KW ebarateSade  ebarateSade : ebarateSade AND_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade  ebarateSade : NOT_KW ebarateSade  ebarateSade : ebarateRabetei  ebarateRabetei : ebarateRiaziManteghi  ebarateRabetei : ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi  amalgareRabetei : LT   amalgareRabetei : GT   amalgareRabetei : GE  amalgareRabetei : LE  amalgareRabetei : EQ  ebarateRiaziManteghi : ebarateYegani ebarateRiaziManteghi : ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi  amalgareRiazi : PLUS  amalgareRiazi : MINUS  amalgareRiazi : TIMES  amalgareRiazi : DIVIDE  amalgareRiazi : MOD  ebarateYegani : amalgareYegani ebarateYegani  ebarateYegani : amel  amalgareYegani : MINUS  amalgareYegani : TIMES  amalgareYegani : QUESTION_MARK  amel : taghirpazir  amel :  taghirnapazir  taghirpazir : SHENASE  taghirpazir : taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET taghirpazir : taghirpazir DOT SHENASE  taghirnapazir : OPEN_PAREN ebarat CLOSE_PAREN  taghirnapazir : sedaZadan taghirnapazir : meghdareSabet  sedaZadan : SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN  bordareVorudi : bordareVorudiha  bordareVorudi : epsilon  bordareVorudiha : bordareVorudiha COMMA ebarat bordareVorudiha : ebarat  meghdareSabet : INT  meghdareSabet :  FLOAT  meghdareSabet :  HARFE_SABET  meghdareSabet : TRUE_KW  meghdareSabet : FALSE_KW  epsilon : '
    
_lr_action_items = {'CASE_KW':([169,174,193,194,198,199,],[173,180,-50,-51,-52,-53,]),'WHILE_KW':([35,40,68,77,78,80,83,84,86,89,90,92,122,124,126,127,150,152,153,154,155,165,166,167,168,171,172,175,182,183,184,187,190,191,],[-9,75,-8,-46,-36,-37,-40,-39,-111,-38,-41,75,-59,-57,-45,-111,-10,75,-58,75,-44,75,-47,-43,-42,-56,75,-48,75,75,-49,75,75,75,]),'MINUS_MINUS':([48,91,149,164,],[-95,130,-97,-96,]),'GE':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,143,149,162,164,],[-95,100,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,-82,-97,-101,-96,]),'BREAK_KW':([35,40,68,77,78,80,83,84,86,89,90,92,122,124,126,127,150,152,153,154,155,165,166,167,168,171,172,175,182,183,184,187,190,191,],[-9,76,-8,-46,-36,-37,-40,-39,-111,-38,-41,76,-59,-57,-45,-111,-10,76,-58,76,-44,76,-47,-43,-42,-56,76,-48,76,76,-49,76,76,76,]),'MINUS_EQ':([48,91,149,164,],[-95,131,-97,-96,]),'LE':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,143,149,162,164,],[-95,103,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,-82,-97,-101,-96,]),'HARFE_SABET':([33,35,40,46,47,56,57,60,65,68,77,78,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[55,-9,55,55,55,-92,-91,-90,55,-8,-46,-36,-37,55,55,-40,-39,-111,-38,-41,55,55,55,-85,-78,-76,55,-79,-84,-80,-83,-77,-86,-87,55,55,55,55,55,55,-59,-57,-45,-111,55,55,55,55,55,55,-10,55,-58,55,-44,55,55,-47,-43,-42,-56,55,-48,55,55,-49,55,55,55,]),'NOGHTE_VIRGUL':([18,19,20,21,24,25,35,37,38,39,40,41,42,48,49,50,51,52,53,54,55,58,59,61,62,63,64,66,68,72,76,77,78,80,82,83,84,85,86,88,89,90,91,92,93,94,95,116,118,119,120,122,124,125,126,127,129,130,137,142,143,144,145,146,147,149,150,152,153,154,155,157,158,159,160,161,162,164,165,166,167,168,171,172,175,182,183,184,187,188,189,190,191,192,195,196,],[29,-22,-20,-18,-30,36,-9,-34,-33,-31,77,-22,-19,-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,-21,-93,-107,-99,-8,-29,122,-46,-36,-37,124,-40,-39,126,-111,-67,-38,-41,-93,77,-23,-24,-88,-72,150,-35,-32,-59,-57,153,-45,-111,-65,-66,-98,-75,-82,-71,-70,-68,-69,-97,-10,77,-58,77,-44,-62,-60,-64,-63,-61,-101,-96,77,-47,-43,-42,-56,77,-48,77,77,-49,77,193,194,77,77,197,198,199,]),'DIVIDE_EQ':([48,91,149,164,],[-95,133,-97,-96,]),'CHAR_KW':([3,4,7,10,13,14,17,22,23,29,31,34,35,36,67,68,71,77,78,79,80,83,84,86,89,90,122,124,126,127,136,150,153,166,168,171,175,184,],[15,-4,-6,-3,15,-5,15,-2,-111,-17,15,15,-9,15,15,-8,-7,-46,-36,-26,-37,-40,-39,-111,-38,-41,-59,-57,-45,15,-25,-10,-58,-47,-42,-56,-48,-49,]),'OR_KW':([48,49,50,51,52,53,54,55,58,59,61,62,63,64,66,88,91,95,116,123,137,142,143,144,145,146,147,149,151,156,162,164,],[-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,112,-93,-107,-99,112,-93,-88,-72,112,-98,-75,-82,-71,-70,-68,-69,-97,112,112,-101,-96,]),'GT':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,143,149,162,164,],[-95,107,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,-82,-97,-101,-96,]),'DEFAULT_KW':([174,193,194,198,199,],[181,-50,-51,-52,-53,]),'STRUCT_KW':([3,4,7,10,13,14,22,29,71,77,78,79,80,83,84,89,90,122,124,126,136,153,166,168,171,175,184,],[6,-4,-6,-3,6,-5,-2,-17,-7,-46,-36,-26,-37,-40,-39,-38,-41,-59,-57,-45,-25,-58,-47,-42,-56,-48,-49,]),'EQ':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,143,149,162,164,],[-95,105,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,-82,-97,-101,-96,]),'CLOSE_PAREN':([17,24,25,27,28,31,37,38,39,43,48,49,50,51,52,53,54,55,58,59,61,63,64,66,72,88,91,95,96,97,116,119,120,129,130,137,138,139,140,141,142,143,144,145,146,147,149,151,156,157,158,159,160,161,162,164,170,],[-111,-30,-27,-28,40,-111,-34,-33,-31,92,-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-29,-67,-93,-88,137,-111,-72,-35,-32,-65,-66,-98,162,-102,-105,-103,-75,-82,-71,-70,-68,-69,-97,165,169,-62,-60,-64,-63,-61,-101,-96,-104,]),'SHORT_CIRCUIT_AND_KW':([48,49,50,51,52,53,54,55,58,59,61,62,63,64,66,88,91,95,116,123,137,142,143,144,145,146,147,149,151,156,162,164,],[-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,110,-93,-107,-99,110,-93,-88,-72,110,-98,-75,-82,-71,110,110,-69,-97,110,110,-101,-96,]),'PLUS_PLUS':([48,91,149,164,],[-95,129,-97,-96,]),'THEN_KW':([48,49,50,51,52,53,54,55,58,59,61,63,64,66,95,116,123,137,142,143,144,145,146,147,149,162,164,],[-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-88,-72,152,-98,-75,-82,-71,-70,-68,-69,-97,-101,-96,]),'TIMES':([33,35,40,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,68,77,78,80,81,82,83,84,86,89,90,91,92,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,137,142,143,149,150,152,153,154,155,162,163,164,165,166,167,168,171,172,175,182,183,184,187,190,191,],[57,-9,57,57,57,-95,99,-81,-109,-100,-106,-108,-92,-91,-94,-110,-90,-89,-93,-107,57,-99,-8,-46,-36,-37,57,57,-40,-39,-111,-38,-41,-93,57,-88,57,57,-85,-78,-76,57,-79,-84,-80,-83,-77,-86,-87,57,57,57,57,57,57,-59,-57,-45,-111,57,57,57,57,57,57,-98,99,99,-97,-10,57,-58,57,-44,-101,57,-96,57,-47,-43,-42,-56,57,-48,57,57,-49,57,57,57,]),'MOD':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,142,143,149,162,164,],[-95,109,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,109,109,-97,-101,-96,]),'IF_KW':([35,40,68,77,78,80,83,84,86,89,90,92,122,124,126,127,150,152,153,154,155,165,166,167,168,171,172,175,182,183,184,187,190,191,],[-9,81,-8,-46,-36,-37,-40,-39,-111,-38,-41,81,-59,-57,-45,-111,-10,81,-58,81,-44,81,-47,-43,-42,-56,81,-48,81,81,-49,81,81,81,]),'TRUE_KW':([33,35,40,46,47,56,57,60,65,68,77,78,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[52,-9,52,52,52,-92,-91,-90,52,-8,-46,-36,-37,52,52,-40,-39,-111,-38,-41,52,52,52,-85,-78,-76,52,-79,-84,-80,-83,-77,-86,-87,52,52,52,52,52,52,-59,-57,-45,-111,52,52,52,52,52,52,-10,52,-58,52,-44,52,52,-47,-43,-42,-56,52,-48,52,52,-49,52,52,52,]),'FALSE_KW':([33,35,40,46,47,56,57,60,65,68,77,78,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[59,-9,59,59,59,-92,-91,-90,59,-8,-46,-36,-37,59,59,-40,-39,-111,-38,-41,59,59,59,-85,-78,-76,59,-79,-84,-80,-83,-77,-86,-87,59,59,59,59,59,59,-59,-57,-45,-111,59,59,59,59,59,59,-10,59,-58,59,-44,59,59,-47,-43,-42,-56,59,-48,59,59,-49,59,59,59,]),'CLOSE_BRACE':([23,34,35,68,77,78,80,83,84,86,89,90,122,124,126,127,150,153,154,155,166,167,168,171,175,184,],[-111,71,-9,-8,-46,-36,-37,-40,-39,-111,-38,-41,-59,-57,-45,-111,-10,-58,168,-44,-47,-43,-42,-56,-48,-49,]),'INT_KW':([3,4,7,10,13,14,17,22,23,29,31,34,35,36,67,68,71,77,78,79,80,83,84,86,89,90,122,124,126,127,136,150,153,166,168,171,175,184,],[11,-4,-6,-3,11,-5,11,-2,-111,-17,11,11,-9,11,11,-8,-7,-46,-36,-26,-37,-40,-39,-111,-38,-41,-59,-57,-45,11,-25,-10,-58,-47,-42,-56,-48,-49,]),'AND_KW':([48,49,50,51,52,53,54,55,58,59,61,62,63,64,66,88,91,95,116,123,137,142,143,144,145,146,147,149,151,156,162,164,],[-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,113,-93,-107,-99,113,-93,-88,-72,113,-98,-75,-82,-71,113,113,-69,-97,113,113,-101,-96,]),'PLUS_EQ':([48,91,149,164,],[-95,135,-97,-96,]),'RETURN_KW':([35,40,68,77,78,80,83,84,86,89,90,92,122,124,126,127,150,152,153,154,155,165,166,167,168,171,172,175,182,183,184,187,190,191,],[-9,82,-8,-46,-36,-37,-40,-39,-111,-38,-41,82,-59,-57,-45,-111,-10,82,-58,82,-44,82,-47,-43,-42,-56,82,-48,82,82,-49,82,82,82,]),'DOT':([48,63,91,149,164,],[-95,115,115,-97,-96,]),'COLON':([176,177,181,185,186,],[182,183,187,190,191,]),'SHORT_CIRCUIT_OR_KW':([48,49,50,51,52,53,54,55,58,59,61,62,63,64,66,88,91,95,116,123,137,142,143,144,145,146,147,149,151,156,162,164,],[-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,111,-93,-107,-99,111,-93,-88,-72,111,-98,-75,-82,-71,-70,-68,-69,-97,111,111,-101,-96,]),'CONST_KW':([23,34,35,68,86,127,150,],[-111,67,-9,-8,-111,67,-10,]),'SHENASE':([1,3,4,5,6,7,9,10,11,12,13,14,15,22,26,29,30,33,35,40,46,47,56,57,60,65,68,69,70,71,74,77,78,79,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,121,122,124,126,127,128,131,132,133,134,135,136,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[3,8,-4,-14,16,-6,-15,-3,-13,19,8,-5,-16,-2,37,-17,41,48,-9,48,48,48,-92,-91,-90,48,-8,41,-12,-7,37,-46,-36,-26,-37,48,48,-40,-39,-111,-38,-41,48,48,48,-85,-78,-76,48,-79,-84,-80,-83,-77,-86,-87,48,48,48,48,48,149,-11,48,-59,-57,-45,-111,48,48,48,48,48,48,-25,-10,48,-58,48,-44,48,48,-47,-43,-42,-56,48,-48,48,48,-49,48,48,48,]),'NOT_KW':([33,35,40,47,65,68,77,78,80,81,82,83,84,86,89,90,92,97,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[65,-9,65,65,65,-8,-46,-36,-37,65,65,-40,-39,-111,-38,-41,65,65,65,65,65,65,65,65,-59,-57,-45,-111,65,65,65,65,65,65,-10,65,-58,65,-44,65,65,-47,-43,-42,-56,65,-48,65,65,-49,65,65,65,]),'COMMA':([18,19,20,21,37,38,39,41,42,48,49,50,51,52,53,54,55,58,59,61,62,63,64,66,88,91,93,94,95,116,118,119,120,129,130,137,139,140,142,143,144,145,146,147,149,157,158,159,160,161,162,164,170,],[30,-22,-20,-18,-34,-33,74,-22,-19,-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,-21,-93,-107,-99,-67,-93,-23,-24,-88,-72,30,-35,-32,-65,-66,-98,163,-105,-75,-82,-71,-70,-68,-69,-97,-62,-60,-64,-63,-61,-101,-96,-104,]),'FLOAT_KW':([3,4,7,10,13,14,17,22,23,29,31,34,35,36,67,68,71,77,78,79,80,83,84,86,89,90,122,124,126,127,136,150,153,166,168,171,175,184,],[5,-4,-6,-3,5,-5,5,-2,-111,-17,5,5,-9,5,5,-8,-7,-46,-36,-26,-37,-40,-39,-111,-38,-41,-59,-57,-45,5,-25,-10,-58,-47,-42,-56,-48,-49,]),'DIVIDE':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,142,143,149,162,164,],[-95,108,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,108,108,-97,-101,-96,]),'INT':([32,33,35,40,46,47,56,57,60,65,68,77,78,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,173,175,180,182,183,184,187,190,191,],[44,54,-9,54,54,54,-92,-91,-90,54,-8,-46,-36,-37,54,54,-40,-39,-111,-38,-41,54,54,54,-85,-78,-76,54,-79,-84,-80,-83,-77,-86,-87,54,54,54,54,54,54,-59,-57,-45,-111,54,54,54,54,54,54,-10,54,-58,54,-44,54,54,-47,-43,-42,-56,54,176,-48,185,54,54,-49,54,54,54,]),'OPEN_PAREN':([8,19,33,35,40,46,47,48,56,57,60,65,68,75,77,78,80,81,82,83,84,86,87,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[17,31,47,-9,47,47,47,97,-92,-91,-90,47,-8,121,-46,-36,-37,47,47,-40,-39,-111,128,-38,-41,47,47,47,-85,-78,-76,47,-79,-84,-80,-83,-77,-86,-87,47,47,47,47,47,47,-59,-57,-45,-111,47,47,47,47,47,47,-10,47,-58,47,-44,47,47,-47,-43,-42,-56,47,-48,47,47,-49,47,47,47,]),'OPEN_BRACE':([16,35,40,68,77,78,80,83,84,86,89,90,92,122,124,126,127,150,152,153,154,155,165,166,167,168,171,172,175,182,183,184,187,190,191,],[23,-9,86,-8,-46,-36,-37,-40,-39,-111,-38,-41,86,-59,-57,-45,-111,-10,86,-58,86,-44,86,-47,-43,-42,-56,86,-48,86,86,-49,86,86,86,]),'ELSE_KW':([77,78,80,83,84,89,90,122,124,126,153,166,168,171,175,184,],[-46,-36,-37,-40,-39,-38,-41,-59,-57,-45,-58,172,-42,-56,-48,-49,]),'PROGRAM_KW':([0,],[1,]),'LT':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,143,149,162,164,],[-95,101,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,-82,-97,-101,-96,]),'CLOSE_BRACKET':([44,45,48,49,50,51,52,53,54,55,58,59,61,63,64,66,73,88,91,95,116,129,130,137,142,143,144,145,146,147,148,149,157,158,159,160,161,162,164,],[93,94,-95,-73,-74,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,119,-67,-93,-88,-72,-65,-66,-98,-75,-82,-71,-70,-68,-69,164,-97,-62,-60,-64,-63,-61,-101,-96,]),'SWITCH_KW':([35,40,68,77,78,80,83,84,86,89,90,92,122,124,126,127,150,152,153,154,155,165,166,167,168,171,172,175,182,183,184,187,190,191,],[-9,87,-8,-46,-36,-37,-40,-39,-111,-38,-41,87,-59,-57,-45,-111,-10,87,-58,87,-44,87,-47,-43,-42,-56,87,-48,87,87,-49,87,87,87,]),'$end':([2,4,7,10,13,14,22,29,71,77,78,79,80,83,84,89,90,122,124,126,136,153,166,168,171,175,184,],[0,-4,-6,-3,-1,-5,-2,-17,-7,-46,-36,-26,-37,-40,-39,-38,-41,-59,-57,-45,-25,-58,-47,-42,-56,-48,-49,]),'BOOL_KW':([3,4,7,10,13,14,17,22,23,29,31,34,35,36,67,68,71,77,78,79,80,83,84,86,89,90,122,124,126,127,136,150,153,166,168,171,175,184,],[9,-4,-6,-3,9,-5,9,-2,-111,-17,9,9,-9,9,9,-8,-7,-46,-36,-26,-37,-40,-39,-111,-38,-41,-59,-57,-45,9,-25,-10,-58,-47,-42,-56,-48,-49,]),'QUESTION_MARK':([33,35,40,46,47,56,57,60,65,68,77,78,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,175,182,183,184,187,190,191,],[56,-9,56,56,56,-92,-91,-90,56,-8,-46,-36,-37,56,56,-40,-39,-111,-38,-41,56,56,56,-85,-78,-76,56,-79,-84,-80,-83,-77,-86,-87,56,56,56,56,56,56,-59,-57,-45,-111,56,56,56,56,56,56,-10,56,-58,56,-44,56,56,-47,-43,-42,-56,56,-48,56,56,-49,56,56,56,]),'OPEN_BRACKET':([19,37,41,48,63,91,149,164,],[32,73,32,-95,114,114,-97,-96,]),'EQUALS':([19,20,41,48,91,93,94,149,164,],[-22,33,-22,-95,132,-23,-24,-97,-96,]),'TIMES_EQ':([48,91,149,164,],[-95,134,-97,-96,]),'MINUS':([33,35,40,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,68,77,78,80,81,82,83,84,86,89,90,91,92,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,137,142,143,149,150,152,153,154,155,162,163,164,165,166,167,168,171,172,175,182,183,184,187,190,191,],[60,-9,60,60,60,-95,104,-81,-109,-100,-106,-108,-92,-91,-94,-110,-90,-89,-93,-107,60,-99,-8,-46,-36,-37,60,60,-40,-39,-111,-38,-41,-93,60,-88,60,60,-85,-78,-76,60,-79,-84,-80,-83,-77,-86,-87,60,60,60,60,60,60,-59,-57,-45,-111,60,60,60,60,60,60,-98,104,104,-97,-10,60,-58,60,-44,-101,60,-96,60,-47,-43,-42,-56,60,-48,60,60,-49,60,60,60,]),'END_KW':([174,178,179,193,194,197,198,199,],[-111,-55,184,-50,-51,-54,-52,-53,]),'FLOAT':([32,33,35,40,46,47,56,57,60,65,68,77,78,80,81,82,83,84,86,89,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,126,127,128,131,132,133,134,135,150,152,153,154,155,163,165,166,167,168,171,172,173,175,180,182,183,184,187,190,191,],[45,64,-9,64,64,64,-92,-91,-90,64,-8,-46,-36,-37,64,64,-40,-39,-111,-38,-41,64,64,64,-85,-78,-76,64,-79,-84,-80,-83,-77,-86,-87,64,64,64,64,64,64,-59,-57,-45,-111,64,64,64,64,64,64,-10,64,-58,64,-44,64,64,-47,-43,-42,-56,64,177,-48,186,64,64,-49,64,64,64,]),'PLUS':([48,50,51,52,53,54,55,58,59,61,63,64,66,91,95,137,142,143,149,162,164,],[-95,106,-81,-109,-100,-106,-108,-94,-110,-89,-93,-107,-99,-93,-88,-98,106,106,-97,-101,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'amalgareYegani':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'bordareVorudiha':([97,],[139,]),'amalgareRiazi':([50,142,143,],[102,102,102,]),'ebarateRiaziManteghi':([33,40,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[50,50,50,50,50,50,50,50,142,143,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'tarifeSakhtar':([3,13,],[4,4,]),'jomleyeMorakkab':([40,92,152,154,165,172,182,183,187,190,191,],[78,78,78,78,78,78,78,78,78,78,78,]),'epsilon':([17,23,31,86,97,127,174,],[27,35,27,35,141,155,178,]),'jomle':([40,92,152,154,165,172,182,183,187,190,191,],[79,136,166,167,171,175,188,189,192,195,196,]),'tarifeMoteghayyer':([3,13,],[14,14,]),'onsoreHalat':([169,],[174,]),'amel':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'tarifeMeghdareAvvalie':([12,30,69,],[21,42,21,]),'amalgareRabetei':([50,],[98,]),'jensVorudiha':([17,31,36,],[24,24,72,]),'tarifhayeMahalli':([23,86,],[34,127,]),'shenaseyeVorudiha':([26,],[39,]),'tarifeTabe':([3,13,],[7,7,]),'taghirnapazir':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'jens':([3,13,17,31,34,36,67,127,],[12,12,26,26,70,26,117,70,]),'jomleyeBazgasht':([40,92,152,154,165,172,182,183,187,190,191,],[83,83,83,83,83,83,83,83,83,83,83,]),'tarifeShenaseyeMoteghayyer':([12,30,69,],[20,20,20,]),'tarifMoteghayyereMahdud':([34,127,],[68,68,]),'shenaseyeVorudi':([26,74,],[38,120,]),'tarifhayeMoteghayyerha':([12,69,],[18,118,]),'jomleyeTekrar':([40,92,152,154,165,172,182,183,187,190,191,],[84,84,84,84,84,84,84,84,84,84,84,]),'bordareVorudi':([97,],[138,]),'ebarateRabetei':([33,40,47,65,81,82,92,97,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'onsorePishfarz':([174,],[179,]),'ebarateYegani':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[51,51,95,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'vorudiha':([17,31,],[25,25,]),'taghirpazir':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[63,91,63,91,63,63,91,91,91,63,63,63,63,63,63,91,63,63,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'barnameh':([0,],[2,]),'ebarat':([40,47,82,92,97,114,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[85,96,125,85,140,148,157,158,159,160,161,85,85,170,85,85,85,85,85,85,85,]),'jomleyeEbarat':([40,92,152,154,165,172,182,183,187,190,191,],[80,80,80,80,80,80,80,80,80,80,80,]),'meghdareSabet':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ebarateSade':([33,40,47,65,81,82,92,97,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[62,88,88,116,123,88,88,88,144,145,146,147,88,151,156,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'tarif':([3,13,],[10,22,]),'jomleha':([127,],[154,]),'jomleyeEntekhab':([40,92,152,154,165,172,182,183,187,190,191,],[89,89,89,89,89,89,89,89,89,89,89,]),'jomleyeShekast':([40,92,152,154,165,172,182,183,187,190,191,],[90,90,90,90,90,90,90,90,90,90,90,]),'jenseMahdud':([34,127,],[69,69,]),'sedaZadan':([33,40,46,47,65,81,82,92,97,98,102,110,111,112,113,114,121,128,131,132,133,134,135,152,154,163,165,172,182,183,187,190,191,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'tarifha':([3,],[13,]),'vorudi':([17,31,],[28,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> barnameh","S'",1,None,None,None),
  ('barnameh -> PROGRAM_KW SHENASE tarifha','barnameh',3,'p_barnameh','yacc.py',17),
  ('tarifha -> tarifha tarif','tarifha',2,'p_tarifha_1','yacc.py',22),
  ('tarifha -> tarif','tarifha',1,'p_tarifha_2','yacc.py',27),
  ('tarif -> tarifeSakhtar','tarif',1,'p_tarif_1','yacc.py',33),
  ('tarif -> tarifeMoteghayyer','tarif',1,'p_tarif_2','yacc.py',38),
  ('tarif -> tarifeTabe','tarif',1,'p_tarif_3','yacc.py',43),
  ('tarifeSakhtar -> STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE','tarifeSakhtar',5,'p_tarifeSakhtar','yacc.py',48),
  ('tarifhayeMahalli -> tarifhayeMahalli tarifMoteghayyereMahdud','tarifhayeMahalli',2,'p_tarifhayeMahalli_1','yacc.py',53),
  ('tarifhayeMahalli -> epsilon','tarifhayeMahalli',1,'p_tarifhayeMahalli_2','yacc.py',58),
  ('tarifMoteghayyereMahdud -> jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifMoteghayyereMahdud',3,'p_tarifMoteghayyereMahdud','yacc.py',63),
  ('jenseMahdud -> CONST_KW jens','jenseMahdud',2,'p_jenseMahdud_1','yacc.py',68),
  ('jenseMahdud -> jens','jenseMahdud',1,'p_jenseMahdud_2','yacc.py',73),
  ('jens -> INT_KW','jens',1,'p_jens_1','yacc.py',78),
  ('jens -> FLOAT_KW','jens',1,'p_jens_2','yacc.py',83),
  ('jens -> BOOL_KW','jens',1,'p_jens_3','yacc.py',88),
  ('jens -> CHAR_KW','jens',1,'p_jens_4','yacc.py',93),
  ('tarifeMoteghayyer -> jens tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifeMoteghayyer',3,'p_tarifeMoteghayyer','yacc.py',98),
  ('tarifhayeMoteghayyerha -> tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',1,'p_tarifhayeMoteghayyerha_1','yacc.py',103),
  ('tarifhayeMoteghayyerha -> tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',3,'p_tarifhayeMoteghayyerha_2','yacc.py',108),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer','tarifeMeghdareAvvalie',1,'p_tarifeMeghdareAvvalie_1','yacc.py',113),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer EQUALS ebarateSade','tarifeMeghdareAvvalie',3,'p_tarifeMeghdareAvvalie_2','yacc.py',118),
  ('tarifeShenaseyeMoteghayyer -> SHENASE','tarifeShenaseyeMoteghayyer',1,'p_tarifeShenaseyeMoteghayyer_1','yacc.py',123),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET INT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_2','yacc.py',128),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET FLOAT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_3','yacc.py',133),
  ('tarifeTabe -> jens SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',6,'p_tarifeTabe_1','yacc.py',138),
  ('tarifeTabe -> SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',5,'p_tarifeTabe_2','yacc.py',143),
  ('vorudi -> vorudiha','vorudi',1,'p_vorudi_1','yacc.py',148),
  ('vorudi -> epsilon','vorudi',1,'p_vorudi_2','yacc.py',153),
  ('vorudiha -> vorudiha NOGHTE_VIRGUL jensVorudiha','vorudiha',3,'p_vorudiha_1','yacc.py',158),
  ('vorudiha -> jensVorudiha','vorudiha',1,'p_vorudiha_2','yacc.py',163),
  ('jensVorudiha -> jens shenaseyeVorudiha','jensVorudiha',2,'p_jensVorudiha','yacc.py',168),
  ('shenaseyeVorudiha -> shenaseyeVorudiha COMMA shenaseyeVorudi','shenaseyeVorudiha',3,'p_shenaseyeVorudiha_1','yacc.py',173),
  ('shenaseyeVorudiha -> shenaseyeVorudi','shenaseyeVorudiha',1,'p_shenaseyeVorudiha_2','yacc.py',178),
  ('shenaseyeVorudi -> SHENASE','shenaseyeVorudi',1,'p_shenaseyeVorudi_1','yacc.py',183),
  ('shenaseyeVorudi -> SHENASE OPEN_BRACKET CLOSE_BRACKET','shenaseyeVorudi',3,'p_shenaseyeVorudi_2','yacc.py',188),
  ('jomle -> jomleyeMorakkab','jomle',1,'p_jomle_1','yacc.py',193),
  ('jomle -> jomleyeEbarat','jomle',1,'p_jomle_2','yacc.py',198),
  ('jomle -> jomleyeEntekhab','jomle',1,'p_jomle_3','yacc.py',203),
  ('jomle -> jomleyeTekrar','jomle',1,'p_jomle_4','yacc.py',208),
  ('jomle -> jomleyeBazgasht','jomle',1,'p_jomle_5','yacc.py',213),
  ('jomle -> jomleyeShekast','jomle',1,'p_jomle_6','yacc.py',218),
  ('jomleyeMorakkab -> OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE','jomleyeMorakkab',4,'p_jomleyeMorakkab','yacc.py',223),
  ('jomleha -> jomleha jomle','jomleha',2,'p_jomleha_1','yacc.py',228),
  ('jomleha -> epsilon','jomleha',1,'p_jomleha_2','yacc.py',233),
  ('jomleyeEbarat -> ebarat NOGHTE_VIRGUL','jomleyeEbarat',2,'p_jomleyeEbarat_1','yacc.py',238),
  ('jomleyeEbarat -> NOGHTE_VIRGUL','jomleyeEbarat',1,'p_jomleyeEbarat_2','yacc.py',243),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle','jomleyeEntekhab',4,'p_jomleyeEntekhab_1','yacc.py',248),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle','jomleyeEntekhab',6,'p_jomleyeEntekhab_2','yacc.py',253),
  ('jomleyeEntekhab -> SWITCH_KW OPEN_PAREN ebarateSade CLOSE_PAREN onsoreHalat onsorePishfarz END_KW','jomleyeEntekhab',7,'p_jomleyeEntekhab_3','yacc.py',258),
  ('onsoreHalat -> CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_1','yacc.py',264),
  ('onsoreHalat -> CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_2','yacc.py',269),
  ('onsoreHalat -> onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_3','yacc.py',274),
  ('onsoreHalat -> onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_4','yacc.py',279),
  ('onsorePishfarz -> DEFAULT_KW COLON jomle NOGHTE_VIRGUL','onsorePishfarz',4,'p_onsorePishfarz_1','yacc.py',284),
  ('onsorePishfarz -> epsilon','onsorePishfarz',1,'p_onsorePishfarz_2','yacc.py',289),
  ('jomleyeTekrar -> WHILE_KW OPEN_PAREN ebarateSade CLOSE_PAREN jomle','jomleyeTekrar',5,'p_jomleyeTekrar','yacc.py',294),
  ('jomleyeBazgasht -> RETURN_KW NOGHTE_VIRGUL','jomleyeBazgasht',2,'p_jomleyeBazgasht_1','yacc.py',299),
  ('jomleyeBazgasht -> RETURN_KW ebarat NOGHTE_VIRGUL','jomleyeBazgasht',3,'p_jomleyeBazgasht_2','yacc.py',304),
  ('jomleyeShekast -> BREAK_KW NOGHTE_VIRGUL','jomleyeShekast',2,'p_jomleyeShekast','yacc.py',309),
  ('ebarat -> taghirpazir EQUALS ebarat','ebarat',3,'p_ebarat_1','yacc.py',314),
  ('ebarat -> taghirpazir PLUS_EQ ebarat','ebarat',3,'p_ebarat_2','yacc.py',319),
  ('ebarat -> taghirpazir MINUS_EQ ebarat','ebarat',3,'p_ebarat_3','yacc.py',324),
  ('ebarat -> taghirpazir TIMES_EQ ebarat','ebarat',3,'p_ebarat_4','yacc.py',329),
  ('ebarat -> taghirpazir DIVIDE_EQ ebarat','ebarat',3,'p_ebarat_5','yacc.py',334),
  ('ebarat -> taghirpazir PLUS_PLUS','ebarat',2,'p_ebarat_6','yacc.py',339),
  ('ebarat -> taghirpazir MINUS_MINUS','ebarat',2,'p_ebarat_7','yacc.py',344),
  ('ebarat -> ebarateSade','ebarat',1,'p_ebarat_8','yacc.py',349),
  ('ebarateSade -> ebarateSade OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_1','yacc.py',354),
  ('ebarateSade -> ebarateSade AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_2','yacc.py',359),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_3','yacc.py',364),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_4','yacc.py',369),
  ('ebarateSade -> NOT_KW ebarateSade','ebarateSade',2,'p_ebarateSade_5','yacc.py',374),
  ('ebarateSade -> ebarateRabetei','ebarateSade',1,'p_ebarateSade_6','yacc.py',379),
  ('ebarateRabetei -> ebarateRiaziManteghi','ebarateRabetei',1,'p_ebarateRabetei_1','yacc.py',384),
  ('ebarateRabetei -> ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi','ebarateRabetei',3,'p_ebarateRabetei_2','yacc.py',389),
  ('amalgareRabetei -> LT','amalgareRabetei',1,'p_amalgareRabetei_1','yacc.py',394),
  ('amalgareRabetei -> GT','amalgareRabetei',1,'p_amalgareRabetei_2','yacc.py',399),
  ('amalgareRabetei -> GE','amalgareRabetei',1,'p_amalgareRabetei_3','yacc.py',404),
  ('amalgareRabetei -> LE','amalgareRabetei',1,'p_amalgareRabetei_4','yacc.py',409),
  ('amalgareRabetei -> EQ','amalgareRabetei',1,'p_amalgareRabetei_5','yacc.py',414),
  ('ebarateRiaziManteghi -> ebarateYegani','ebarateRiaziManteghi',1,'p_ebarateRiaziManteghi_1','yacc.py',419),
  ('ebarateRiaziManteghi -> ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi','ebarateRiaziManteghi',3,'p_ebarateRiaziManteghi_2','yacc.py',424),
  ('amalgareRiazi -> PLUS','amalgareRiazi',1,'p_amalgareRiazi_1','yacc.py',429),
  ('amalgareRiazi -> MINUS','amalgareRiazi',1,'p_amalgareRiazi_2','yacc.py',434),
  ('amalgareRiazi -> TIMES','amalgareRiazi',1,'p_amalgareRiazi_3','yacc.py',439),
  ('amalgareRiazi -> DIVIDE','amalgareRiazi',1,'p_amalgareRiazi_4','yacc.py',444),
  ('amalgareRiazi -> MOD','amalgareRiazi',1,'p_amalgareRiazi_5','yacc.py',449),
  ('ebarateYegani -> amalgareYegani ebarateYegani','ebarateYegani',2,'p_ebarateYegani_1','yacc.py',454),
  ('ebarateYegani -> amel','ebarateYegani',1,'p_ebarateYegani_2','yacc.py',459),
  ('amalgareYegani -> MINUS','amalgareYegani',1,'p_amalgareYegani_1','yacc.py',464),
  ('amalgareYegani -> TIMES','amalgareYegani',1,'p_amalgareYegani_2','yacc.py',469),
  ('amalgareYegani -> QUESTION_MARK','amalgareYegani',1,'p_amalgareYegani_3','yacc.py',474),
  ('amel -> taghirpazir','amel',1,'p_amel_1','yacc.py',479),
  ('amel -> taghirnapazir','amel',1,'p_amel_2','yacc.py',484),
  ('taghirpazir -> SHENASE','taghirpazir',1,'p_taghirpazir_1','yacc.py',489),
  ('taghirpazir -> taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET','taghirpazir',4,'p_taghirpazir_2','yacc.py',494),
  ('taghirpazir -> taghirpazir DOT SHENASE','taghirpazir',3,'p_taghirpazir_3','yacc.py',499),
  ('taghirnapazir -> OPEN_PAREN ebarat CLOSE_PAREN','taghirnapazir',3,'p_taghirnapazir_1','yacc.py',504),
  ('taghirnapazir -> sedaZadan','taghirnapazir',1,'p_taghirnapazir_2','yacc.py',509),
  ('taghirnapazir -> meghdareSabet','taghirnapazir',1,'p_taghirnapazir_3','yacc.py',514),
  ('sedaZadan -> SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN','sedaZadan',4,'p_sedaZadan','yacc.py',519),
  ('bordareVorudi -> bordareVorudiha','bordareVorudi',1,'p_bordareVorudi_1','yacc.py',524),
  ('bordareVorudi -> epsilon','bordareVorudi',1,'p_bordareVorudi_2','yacc.py',529),
  ('bordareVorudiha -> bordareVorudiha COMMA ebarat','bordareVorudiha',3,'p_bordareVorudiha_1','yacc.py',534),
  ('bordareVorudiha -> ebarat','bordareVorudiha',1,'p_bordareVorudiha_2','yacc.py',539),
  ('meghdareSabet -> INT','meghdareSabet',1,'p_meghdareSabet_1','yacc.py',544),
  ('meghdareSabet -> FLOAT','meghdareSabet',1,'p_meghdareSabet_2','yacc.py',549),
  ('meghdareSabet -> HARFE_SABET','meghdareSabet',1,'p_meghdareSabet_3','yacc.py',554),
  ('meghdareSabet -> TRUE_KW','meghdareSabet',1,'p_meghdareSabet_4','yacc.py',559),
  ('meghdareSabet -> FALSE_KW','meghdareSabet',1,'p_meghdareSabet_5','yacc.py',564),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','yacc.py',569),
]
