
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDESHENASE INT FLOAT HARFE_SABET NOGHTE_VIRGUL COMMA COMMENT DOT PLUS MINUS TIMES DIVIDE MOD EQUALS PLUS_EQ MINUS_EQ TIMES_EQ DIVIDE_EQ COLON PLUS_PLUS MINUS_MINUS LT GT LE GE EQ OPEN_PAREN CLOSE_PAREN OPEN_BRACE CLOSE_BRACE OPEN_BRACKET CLOSE_BRACKET QUESTION_MARK PROGRAM_KW STRUCT_KW CONST_KW INT_KW FLOAT_KW BOOL_KW CHAR_KW IF_KW THEN_KW ELSE_KW SWITCH_KW END_KW CASE_KW DEFAULT_KW WHILE_KW RETURN_KW BREAK_KW OR_KW AND_KW SHORT_CIRCUIT_OR_KW SHORT_CIRCUIT_AND_KW NOT_KW TRUE_KW FALSE_KW barnameh  : PROGRAM_KW SHENASE tarifha  tarifha  : tarifha tarif  tarifha  :  tarif  tarif  : tarifeSakhtar  tarif : tarifeMoteghayyer  tarif : tarifeTabe  tarifeSakhtar : STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE  tarifhayeMahalli : tarifhayeMahalli tarifMoteghayyereMahdud  tarifhayeMahalli : epsilon  tarifMoteghayyereMahdud : jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL  jenseMahdud : CONST_KW jens  jenseMahdud : jens  jens : INT_KW  jens : FLOAT_KW  jens : BOOL_KW  jens : CHAR_KW  tarifeMoteghayyer : jens tarifhayeMoteghayyerha NOGHTE_VIRGUL  tarifhayeMoteghayyerha : tarifeMeghdareAvvalie  tarifhayeMoteghayyerha : tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer  tarifeMeghdareAvvalie : tarifeShenaseyeMoteghayyer EQUALS ebarateSade  tarifeShenaseyeMoteghayyer : SHENASE     tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET INT CLOSE_BRACKET  tarifeShenaseyeMoteghayyer : SHENASE OPEN_BRACKET FLOAT CLOSE_BRACKET  tarifeTabe : jens SHENASE   OPEN_PAREN  vorudi   CLOSE_PAREN  jomle  tarifeTabe : SHENASE   OPEN_PAREN  vorudi   CLOSE_PAREN  jomle  vorudi : vorudiha  vorudi : epsilon  vorudiha : vorudiha NOGHTE_VIRGUL jensVorudiha  vorudiha : jensVorudiha  jensVorudiha : jens shenaseyeVorudiha  shenaseyeVorudiha : shenaseyeVorudiha COMMA shenaseyeVorudi  shenaseyeVorudiha : shenaseyeVorudi  shenaseyeVorudi : SHENASE  shenaseyeVorudi : SHENASE OPEN_BRACKET CLOSE_BRACKET  jomle : jomleyeMorakkab  jomle : jomleyeEbarat  jomle : jomleyeEntekhab  jomle : jomleyeTekrar  jomle : jomleyeBazgasht  jomle : jomleyeShekast  jomleyeMorakkab : OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE  jomleha : jomleha jomle  jomleha : epsilon  jomleyeEbarat : ebarat NOGHTE_VIRGUL  jomleyeEbarat : NOGHTE_VIRGUL  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle  jomleyeEntekhab : IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle  jomleyeEntekhab : SWITCH_KW OPEN_PAREN  ebarateSade CLOSE_PAREN  onsoreHalat onsorePishfarz END_KW  onsoreHalat : CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL  onsoreHalat : onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL  onsorePishfarz : DEFAULT_KW COLON jomle NOGHTE_VIRGUL  onsorePishfarz :  epsilon  jomleyeTekrar : WHILE_KW OPEN_PAREN  ebarateSade   CLOSE_PAREN  jomle    jomleyeBazgasht :  RETURN_KW  NOGHTE_VIRGUL  jomleyeBazgasht : RETURN_KW ebarat NOGHTE_VIRGUL  jomleyeShekast : BREAK_KW NOGHTE_VIRGUL  ebarat : taghirpazir EQUALS ebarat  ebarat : taghirpazir PLUS_EQ ebarat  ebarat : taghirpazir MINUS_EQ ebarat  ebarat : taghirpazir TIMES_EQ ebarat  ebarat : taghirpazir DIVIDE_EQ ebarat  ebarat : taghirpazir PLUS_PLUS ebarat : taghirpazir MINUS_MINUS  ebarat : ebarateSade  ebarateSade : ebarateSade OR_KW ebarateSade  ebarateSade : ebarateSade AND_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade  ebarateSade : ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade  ebarateSade : NOT_KW ebarateSade  ebarateSade : ebarateRabetei  ebarateRabetei : ebarateRiaziManteghi  ebarateRabetei : ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi  amalgareRabetei : LT   amalgareRabetei : GT   amalgareRabetei : GE  amalgareRabetei : LE  amalgareRabetei : EQ  ebarateRiaziManteghi : ebarateYegani ebarateRiaziManteghi : ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi  amalgareRiazi : PLUS  amalgareRiazi : MINUS  amalgareRiazi : TIMES  amalgareRiazi : DIVIDE  amalgareRiazi : MOD  ebarateYegani : amalgareYegani ebarateYegani  ebarateYegani : amel  amalgareYegani : MINUS  amalgareYegani : TIMES  amalgareYegani : QUESTION_MARK  amel : taghirpazir  amel :  taghirnapazir  taghirpazir : SHENASE  taghirpazir : taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET taghirpazir : taghirpazir DOT SHENASE  taghirnapazir : OPEN_PAREN ebarat CLOSE_PAREN  taghirnapazir : sedaZadan taghirnapazir : meghdareSabet  sedaZadan : SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN  bordareVorudi : bordareVorudiha  bordareVorudi : epsilon  bordareVorudiha : bordareVorudiha COMMA ebarat bordareVorudiha : ebarat  meghdareSabet : INT  meghdareSabet :  FLOAT  meghdareSabet :  HARFE_SABET  meghdareSabet : TRUE_KW  meghdareSabet : FALSE_KW epsilon : '
    
_lr_action_items = {'DIVIDE_EQ':([42,84,145,163,],[-95,125,-97,-96,]),'MINUS_EQ':([42,84,145,163,],[-95,129,-97,-96,]),'GT':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,91,-108,-93,-93,-88,-98,-82,-97,-101,-96,]),'AND_KW':([39,40,42,43,44,46,49,50,51,52,53,55,56,58,59,81,84,89,90,124,138,139,140,141,142,143,144,145,152,153,161,163,],[-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,103,-108,-93,103,-93,103,-88,103,-98,-75,-82,103,103,103,103,-97,103,103,-101,-96,]),'OPEN_BRACE':([22,35,66,68,69,70,71,75,78,79,82,109,112,117,118,119,123,150,151,154,155,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[33,68,-9,-111,-37,-41,-38,-40,-36,-39,-46,68,-8,-111,-59,-45,-57,68,-44,-58,68,-10,-42,-43,68,-47,-56,68,-48,-49,68,68,68,68,68,]),'THEN_KW':([39,40,42,43,44,46,49,50,51,52,53,55,58,59,89,90,124,138,139,140,141,142,143,144,145,161,163,],[-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,-108,-93,-72,-88,155,-98,-75,-82,-69,-71,-68,-70,-97,-101,-96,]),'PROGRAM_KW':([0,],[2,]),'INT':([28,30,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,173,174,177,181,182,183,186,187,189,190,],[46,61,46,-90,46,46,-92,46,-91,-9,-111,-37,-41,-38,-40,46,-36,-39,46,-46,46,-77,-79,-84,46,-78,-86,-83,-87,-80,-76,-85,46,46,46,46,46,46,46,-8,-111,-59,-45,46,46,-57,46,46,46,46,46,46,-44,-58,46,46,-10,-42,-43,46,-47,-56,179,46,184,-48,-49,46,46,46,46,46,]),'$end':([1,6,8,9,11,14,17,31,69,70,71,75,78,79,82,83,116,118,119,123,147,154,165,169,171,181,182,],[0,-1,-5,-4,-3,-6,-2,-17,-37,-41,-38,-40,-36,-39,-46,-26,-7,-59,-45,-57,-25,-58,-42,-47,-56,-48,-49,]),'OPEN_PAREN':([5,20,28,35,41,42,45,47,48,54,57,66,68,69,70,71,74,75,76,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[16,29,45,45,-90,87,45,45,-92,45,-91,-9,-111,-37,-41,-38,120,-40,121,45,-36,-39,45,-46,45,-77,-79,-84,45,-78,-86,-83,-87,-80,-76,-85,45,45,45,45,45,45,45,-8,-111,-59,-45,45,45,-57,45,45,45,45,45,45,-44,-58,45,45,-10,-42,-43,45,-47,-56,45,-48,-49,45,45,45,45,45,]),'COMMA':([18,19,20,21,36,37,38,39,40,42,43,44,46,49,50,51,52,53,55,56,58,59,63,64,81,84,89,90,110,111,126,130,132,133,134,137,138,139,140,141,142,143,144,145,148,156,157,158,159,160,161,163,170,],[-18,-20,-22,32,85,-33,-34,-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,-21,-108,-93,-19,-22,-67,-93,-72,-88,-23,-24,-66,-65,-32,-35,-105,162,-98,-75,-82,-69,-71,-68,-70,-97,32,-64,-63,-61,-62,-60,-101,-96,-104,]),'LT':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,100,-108,-93,-93,-88,-98,-82,-97,-101,-96,]),'SHORT_CIRCUIT_OR_KW':([39,40,42,43,44,46,49,50,51,52,53,55,56,58,59,81,84,89,90,124,138,139,140,141,142,143,144,145,152,153,161,163,],[-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,106,-108,-93,106,-93,106,-88,106,-98,-75,-82,106,106,106,106,-97,106,106,-101,-96,]),'QUESTION_MARK':([28,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[48,48,-90,48,48,-92,48,-91,-9,-111,-37,-41,-38,-40,48,-36,-39,48,-46,48,-77,-79,-84,48,-78,-86,-83,-87,-80,-76,-85,48,48,48,48,48,48,48,-8,-111,-59,-45,48,48,-57,48,48,48,48,48,48,-44,-58,48,48,-10,-42,-43,48,-47,-56,48,-48,-49,48,48,48,48,48,]),'TIMES_EQ':([42,84,145,163,],[-95,127,-97,-96,]),'FALSE_KW':([28,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[49,49,-90,49,49,-92,49,-91,-9,-111,-37,-41,-38,-40,49,-36,-39,49,-46,49,-77,-79,-84,49,-78,-86,-83,-87,-80,-76,-85,49,49,49,49,49,49,49,-8,-111,-59,-45,49,49,-57,49,49,49,49,49,49,-44,-58,49,49,-10,-42,-43,49,-47,-56,49,-48,-49,49,49,49,49,49,]),'INT_KW':([3,6,8,9,11,14,16,17,29,31,33,34,65,66,68,69,70,71,75,78,79,82,83,112,114,116,117,118,119,123,147,154,164,165,169,171,181,182,],[13,13,-5,-4,-3,-6,13,-2,13,-17,-111,13,13,-9,-111,-37,-41,-38,-40,-36,-39,-46,-26,-8,13,-7,13,-59,-45,-57,-25,-58,-10,-42,-47,-56,-48,-49,]),'PLUS_EQ':([42,84,145,163,],[-95,128,-97,-96,]),'TIMES':([28,35,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,66,68,69,70,71,75,77,78,79,80,82,84,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,138,139,140,145,150,151,154,155,161,162,163,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[57,57,-109,-90,-95,-81,-94,57,-106,57,-92,-110,-107,-89,-100,-99,57,101,-91,-108,-93,-9,-111,-37,-41,-38,-40,57,-36,-39,57,-46,-93,57,-88,-77,-79,-84,57,-78,-86,-83,-87,-80,-76,-85,57,57,57,57,57,57,57,-8,-111,-59,-45,57,57,-57,57,57,57,57,57,-98,101,101,-97,57,-44,-58,57,-101,57,-96,-10,-42,-43,57,-47,-56,57,-48,-49,57,57,57,57,57,]),'OR_KW':([39,40,42,43,44,46,49,50,51,52,53,55,56,58,59,81,84,89,90,124,138,139,140,141,142,143,144,145,152,153,161,163,],[-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,105,-108,-93,105,-93,105,-88,105,-98,-75,-82,105,105,105,105,-97,105,105,-101,-96,]),'PLUS_PLUS':([42,84,145,163,],[-95,130,-97,-96,]),'MOD':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,139,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,98,-108,-93,-93,-88,-98,98,98,-97,-101,-96,]),'DEFAULT_KW':([172,196,197,198,199,],[176,-50,-51,-52,-53,]),'BREAK_KW':([35,66,68,69,70,71,75,78,79,82,109,112,117,118,119,123,150,151,154,155,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[72,-9,-111,-37,-41,-38,-40,-36,-39,-46,72,-8,-111,-59,-45,-57,72,-44,-58,72,-10,-42,-43,72,-47,-56,72,-48,-49,72,72,72,72,72,]),'CLOSE_BRACE':([33,65,66,68,69,70,71,75,78,79,82,112,117,118,119,123,150,151,154,164,165,166,169,171,181,182,],[-111,116,-9,-111,-37,-41,-38,-40,-36,-39,-46,-8,-111,-59,-45,-57,165,-44,-58,-10,-42,-43,-47,-56,-48,-49,]),'RETURN_KW':([35,66,68,69,70,71,75,78,79,82,109,112,117,118,119,123,150,151,154,155,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[77,-9,-111,-37,-41,-38,-40,-36,-39,-46,77,-8,-111,-59,-45,-57,77,-44,-58,77,-10,-42,-43,77,-47,-56,77,-48,-49,77,77,77,77,77,]),'WHILE_KW':([35,66,68,69,70,71,75,78,79,82,109,112,117,118,119,123,150,151,154,155,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[74,-9,-111,-37,-41,-38,-40,-36,-39,-46,74,-8,-111,-59,-45,-57,74,-44,-58,74,-10,-42,-43,74,-47,-56,74,-48,-49,74,74,74,74,74,]),'CHAR_KW':([3,6,8,9,11,14,16,17,29,31,33,34,65,66,68,69,70,71,75,78,79,82,83,112,114,116,117,118,119,123,147,154,164,165,169,171,181,182,],[4,4,-5,-4,-3,-6,4,-2,4,-17,-111,4,4,-9,-111,-37,-41,-38,-40,-36,-39,-46,-26,-8,4,-7,4,-59,-45,-57,-25,-58,-10,-42,-47,-56,-48,-49,]),'END_KW':([172,175,178,193,196,197,198,199,],[-111,182,-55,-54,-50,-51,-52,-53,]),'MINUS':([28,35,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,66,68,69,70,71,75,77,78,79,80,82,84,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,138,139,140,145,150,151,154,155,161,162,163,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[41,41,-109,-90,-95,-81,-94,41,-106,41,-92,-110,-107,-89,-100,-99,41,93,-91,-108,-93,-9,-111,-37,-41,-38,-40,41,-36,-39,41,-46,-93,41,-88,-77,-79,-84,41,-78,-86,-83,-87,-80,-76,-85,41,41,41,41,41,41,41,-8,-111,-59,-45,41,41,-57,41,41,41,41,41,-98,93,93,-97,41,-44,-58,41,-101,41,-96,-10,-42,-43,41,-47,-56,41,-48,-49,41,41,41,41,41,]),'SWITCH_KW':([35,66,68,69,70,71,75,78,79,82,109,112,117,118,119,123,150,151,154,155,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[76,-9,-111,-37,-41,-38,-40,-36,-39,-46,76,-8,-111,-59,-45,-57,76,-44,-58,76,-10,-42,-43,76,-47,-56,76,-48,-49,76,76,76,76,76,]),'CONST_KW':([33,65,66,68,112,117,164,],[-111,114,-9,-111,-8,114,-10,]),'SHENASE':([2,3,4,6,7,8,9,10,11,12,13,14,15,17,27,28,31,32,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,83,85,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,116,117,118,119,120,121,123,125,127,128,129,131,147,149,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[3,5,-16,5,20,-5,-4,-14,-3,22,-13,-6,-15,-2,38,42,-17,64,42,-90,42,42,-92,42,-91,-9,-111,-37,-41,-38,-40,42,-36,-39,42,-46,-26,38,42,-77,-79,-84,42,-78,-86,-83,-87,-80,-76,-85,42,42,42,42,42,145,42,42,-8,64,-12,-7,-111,-59,-45,42,42,-57,42,42,42,42,42,-25,-11,42,-44,-58,42,42,-10,-42,-43,42,-47,-56,42,-48,-49,42,42,42,42,42,]),'CLOSE_BRACKET':([39,40,42,43,44,46,49,50,51,52,53,55,58,59,61,62,81,84,86,89,90,126,130,138,139,140,141,142,143,144,145,146,156,157,158,159,160,161,163,],[-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,-108,-93,110,111,-67,-93,133,-72,-88,-66,-65,-98,-75,-82,-69,-71,-68,-70,-97,163,-64,-63,-61,-62,-60,-101,-96,]),'MINUS_MINUS':([42,84,145,163,],[-95,126,-97,-96,]),'SHORT_CIRCUIT_AND_KW':([39,40,42,43,44,46,49,50,51,52,53,55,56,58,59,81,84,89,90,124,138,139,140,141,142,143,144,145,152,153,161,163,],[-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,104,-108,-93,104,-93,104,-88,104,-98,-75,-82,104,104,104,104,-97,104,104,-101,-96,]),'CASE_KW':([168,172,196,197,198,199,],[173,177,-50,-51,-52,-53,]),'NOT_KW':([28,35,45,47,66,68,69,70,71,75,77,78,79,80,82,87,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[47,47,47,47,-9,-111,-37,-41,-38,-40,47,-36,-39,47,-46,47,47,47,47,47,47,47,-8,-111,-59,-45,47,47,-57,47,47,47,47,47,47,-44,-58,47,47,-10,-42,-43,47,-47,-56,47,-48,-49,47,47,47,47,47,]),'STRUCT_KW':([3,6,8,9,11,14,17,31,69,70,71,75,78,79,82,83,116,118,119,123,147,154,165,169,171,181,182,],[12,12,-5,-4,-3,-6,-2,-17,-37,-41,-38,-40,-36,-39,-46,-26,-7,-59,-45,-57,-25,-58,-42,-47,-56,-48,-49,]),'FLOAT_KW':([3,6,8,9,11,14,16,17,29,31,33,34,65,66,68,69,70,71,75,78,79,82,83,112,114,116,117,118,119,123,147,154,164,165,169,171,181,182,],[10,10,-5,-4,-3,-6,10,-2,10,-17,-111,10,10,-9,-111,-37,-41,-38,-40,-36,-39,-46,-26,-8,10,-7,10,-59,-45,-57,-25,-58,-10,-42,-47,-56,-48,-49,]),'OPEN_BRACKET':([20,38,42,59,64,84,145,163,],[30,86,-95,108,30,108,-97,-96,]),'FLOAT':([28,30,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,173,174,177,181,182,183,186,187,189,190,],[50,62,50,-90,50,50,-92,50,-91,-9,-111,-37,-41,-38,-40,50,-36,-39,50,-46,50,-77,-79,-84,50,-78,-86,-83,-87,-80,-76,-85,50,50,50,50,50,50,50,-8,-111,-59,-45,50,50,-57,50,50,50,50,50,50,-44,-58,50,50,-10,-42,-43,50,-47,-56,180,50,185,-48,-49,50,50,50,50,50,]),'EQUALS':([19,20,42,64,84,110,111,145,163,],[28,-22,-95,-22,131,-23,-24,-97,-96,]),'CLOSE_PAREN':([16,23,24,25,26,29,36,37,38,39,40,42,43,44,46,49,50,51,52,53,55,58,59,60,67,81,84,87,88,89,90,126,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,152,153,156,157,158,159,160,161,163,170,],[-111,-27,-30,35,-28,-111,-31,-33,-34,-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,-108,-93,109,-29,-67,-93,-111,138,-72,-88,-66,-65,-32,-35,-105,161,-103,-102,-98,-75,-82,-69,-71,-68,-70,-97,167,168,-64,-63,-61,-62,-60,-101,-96,-104,]),'COLON':([176,179,180,184,185,],[183,186,187,189,190,]),'LE':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,92,-108,-93,-93,-88,-98,-82,-97,-101,-96,]),'IF_KW':([35,66,68,69,70,71,75,78,79,82,109,112,117,118,119,123,150,151,154,155,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[80,-9,-111,-37,-41,-38,-40,-36,-39,-46,80,-8,-111,-59,-45,-57,80,-44,-58,80,-10,-42,-43,80,-47,-56,80,-48,-49,80,80,80,80,80,]),'TRUE_KW':([28,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[39,39,-90,39,39,-92,39,-91,-9,-111,-37,-41,-38,-40,39,-36,-39,39,-46,39,-77,-79,-84,39,-78,-86,-83,-87,-80,-76,-85,39,39,39,39,39,39,39,-8,-111,-59,-45,39,39,-57,39,39,39,39,39,39,-44,-58,39,39,-10,-42,-43,39,-47,-56,39,-48,-49,39,39,39,39,39,]),'GE':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,95,-108,-93,-93,-88,-98,-82,-97,-101,-96,]),'ELSE_KW':([69,70,71,75,78,79,82,118,119,123,154,165,169,171,181,182,],[-37,-41,-38,-40,-36,-39,-46,-59,-45,-57,-58,-42,174,-56,-48,-49,]),'PLUS':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,139,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,97,-108,-93,-93,-88,-98,97,97,-97,-101,-96,]),'DOT':([42,59,84,145,163,],[-95,107,107,-97,-96,]),'EQ':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,99,-108,-93,-93,-88,-98,-82,-97,-101,-96,]),'DIVIDE':([39,42,43,44,46,49,50,51,52,53,55,58,59,84,90,138,139,140,145,161,163,],[-109,-95,-81,-94,-106,-110,-107,-89,-100,-99,96,-108,-93,-93,-88,-98,96,96,-97,-101,-96,]),'NOGHTE_VIRGUL':([18,19,20,21,23,24,35,36,37,38,39,40,42,43,44,46,49,50,51,52,53,55,56,58,59,63,64,66,67,68,69,70,71,72,73,75,77,78,79,81,82,84,89,90,109,110,111,112,117,118,119,122,123,126,130,132,133,138,139,140,141,142,143,144,145,148,150,151,154,155,156,157,158,159,160,161,163,164,165,166,167,169,171,174,181,182,183,186,187,188,189,190,191,192,194,195,],[-18,-20,-22,31,34,-30,82,-31,-33,-34,-109,-73,-95,-81,-94,-106,-110,-107,-89,-100,-99,-74,-21,-108,-93,-19,-22,-9,-29,-111,-37,-41,-38,118,119,-40,123,-36,-39,-67,-46,-93,-72,-88,82,-23,-24,-8,-111,-59,-45,154,-57,-66,-65,-32,-35,-98,-75,-82,-69,-71,-68,-70,-97,164,82,-44,-58,82,-64,-63,-61,-62,-60,-101,-96,-10,-42,-43,82,-47,-56,82,-48,-49,82,82,82,193,82,82,196,197,198,199,]),'HARFE_SABET':([28,35,41,45,47,48,54,57,66,68,69,70,71,75,77,78,79,80,82,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,112,117,118,119,120,121,123,125,127,128,129,131,150,151,154,155,162,164,165,166,167,169,171,174,181,182,183,186,187,189,190,],[58,58,-90,58,58,-92,58,-91,-9,-111,-37,-41,-38,-40,58,-36,-39,58,-46,58,-77,-79,-84,58,-78,-86,-83,-87,-80,-76,-85,58,58,58,58,58,58,58,-8,-111,-59,-45,58,58,-57,58,58,58,58,58,58,-44,-58,58,58,-10,-42,-43,58,-47,-56,58,-48,-49,58,58,58,58,58,]),'BOOL_KW':([3,6,8,9,11,14,16,17,29,31,33,34,65,66,68,69,70,71,75,78,79,82,83,112,114,116,117,118,119,123,147,154,164,165,169,171,181,182,],[15,15,-5,-4,-3,-6,15,-2,15,-17,-111,15,15,-9,-111,-37,-41,-38,-40,-36,-39,-46,-26,-8,15,-7,15,-59,-45,-57,-25,-58,-10,-42,-47,-56,-48,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tarifeShenaseyeMoteghayyer':([7,32,113,],[19,19,19,]),'vorudiha':([16,29,],[23,23,]),'vorudi':([16,29,],[25,60,]),'shenaseyeVorudi':([27,85,],[37,132,]),'ebarateYegani':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[43,43,43,43,90,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'bordareVorudi':([87,],[135,]),'jomleyeEntekhab':([35,109,150,155,167,174,183,186,187,189,190,],[71,71,71,71,71,71,71,71,71,71,71,]),'jensVorudiha':([16,29,34,],[24,24,67,]),'epsilon':([16,29,33,68,87,117,172,],[26,26,66,66,136,151,178,]),'tarif':([3,6,],[11,17,]),'onsorePishfarz':([172,],[175,]),'barnameh':([0,],[1,]),'amel':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'jomleyeShekast':([35,109,150,155,167,174,183,186,187,189,190,],[70,70,70,70,70,70,70,70,70,70,70,]),'ebarateRabetei':([28,35,45,47,77,80,87,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'tarifhayeMoteghayyerha':([7,113,],[21,148,]),'jenseMahdud':([65,117,],[113,113,]),'ebarateRiaziManteghi':([28,35,45,47,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[55,55,55,55,55,55,55,139,140,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'tarifeMoteghayyer':([3,6,],[8,8,]),'amalgareRiazi':([55,139,140,],[102,102,102,]),'ebarat':([35,45,77,87,108,109,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[73,88,122,134,146,73,156,157,158,159,160,73,73,170,73,73,73,73,73,73,73,]),'onsoreHalat':([168,],[172,]),'tarifeMeghdareAvvalie':([7,32,113,],[18,63,18,]),'tarifMoteghayyereMahdud':([65,117,],[112,112,]),'jomleha':([117,],[150,]),'amalgareRabetei':([55,],[94,]),'tarifha':([3,],[6,]),'meghdareSabet':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'taghirnapazir':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'tarifeSakhtar':([3,6,],[9,9,]),'tarifeTabe':([3,6,],[14,14,]),'jomleyeMorakkab':([35,109,150,155,167,174,183,186,187,189,190,],[78,78,78,78,78,78,78,78,78,78,78,]),'jomleyeTekrar':([35,109,150,155,167,174,183,186,187,189,190,],[79,79,79,79,79,79,79,79,79,79,79,]),'jomleyeEbarat':([35,109,150,155,167,174,183,186,187,189,190,],[69,69,69,69,69,69,69,69,69,69,69,]),'amalgareYegani':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'tarifhayeMahalli':([33,68,],[65,117,]),'bordareVorudiha':([87,],[137,]),'jomleyeBazgasht':([35,109,150,155,167,174,183,186,187,189,190,],[75,75,75,75,75,75,75,75,75,75,75,]),'sedaZadan':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ebarateSade':([28,35,45,47,77,80,87,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[56,81,81,89,81,124,81,141,142,143,144,81,81,152,153,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'shenaseyeVorudiha':([27,],[36,]),'jomle':([35,109,150,155,167,174,183,186,187,189,190,],[83,147,166,169,171,181,188,191,192,194,195,]),'taghirpazir':([28,35,45,47,54,77,80,87,94,102,103,104,105,106,108,109,120,121,125,127,128,129,131,150,155,162,167,174,183,186,187,189,190,],[59,84,84,59,59,84,59,84,59,59,59,59,59,59,84,84,59,59,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'jens':([3,6,16,29,34,65,114,117,],[7,7,27,27,27,115,149,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> barnameh","S'",1,None,None,None),
  ('barnameh -> PROGRAM_KW SHENASE tarifha','barnameh',3,'p_barnameh','parser.py',14),
  ('tarifha -> tarifha tarif','tarifha',2,'p_tarifha_1','parser.py',19),
  ('tarifha -> tarif','tarifha',1,'p_tarifha_2','parser.py',24),
  ('tarif -> tarifeSakhtar','tarif',1,'p_tarif_1','parser.py',30),
  ('tarif -> tarifeMoteghayyer','tarif',1,'p_tarif_2','parser.py',35),
  ('tarif -> tarifeTabe','tarif',1,'p_tarif_3','parser.py',40),
  ('tarifeSakhtar -> STRUCT_KW SHENASE OPEN_BRACE tarifhayeMahalli CLOSE_BRACE','tarifeSakhtar',5,'p_tarifeSakhtar','parser.py',46),
  ('tarifhayeMahalli -> tarifhayeMahalli tarifMoteghayyereMahdud','tarifhayeMahalli',2,'p_tarifhayeMahalli_1','parser.py',51),
  ('tarifhayeMahalli -> epsilon','tarifhayeMahalli',1,'p_tarifhayeMahalli_2','parser.py',56),
  ('tarifMoteghayyereMahdud -> jenseMahdud tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifMoteghayyereMahdud',3,'p_tarifMoteghayyereMahdud','parser.py',61),
  ('jenseMahdud -> CONST_KW jens','jenseMahdud',2,'p_jenseMahdud_1','parser.py',66),
  ('jenseMahdud -> jens','jenseMahdud',1,'p_jenseMahdud_2','parser.py',71),
  ('jens -> INT_KW','jens',1,'p_jens_1','parser.py',76),
  ('jens -> FLOAT_KW','jens',1,'p_jens_2','parser.py',81),
  ('jens -> BOOL_KW','jens',1,'p_jens_3','parser.py',86),
  ('jens -> CHAR_KW','jens',1,'p_jens_4','parser.py',91),
  ('tarifeMoteghayyer -> jens tarifhayeMoteghayyerha NOGHTE_VIRGUL','tarifeMoteghayyer',3,'p_tarifeMoteghayyer','parser.py',96),
  ('tarifhayeMoteghayyerha -> tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',1,'p_tarifhayeMoteghayyerha_1','parser.py',101),
  ('tarifhayeMoteghayyerha -> tarifhayeMoteghayyerha COMMA tarifeMeghdareAvvalie','tarifhayeMoteghayyerha',3,'p_tarifhayeMoteghayyerha_2','parser.py',106),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer','tarifeMeghdareAvvalie',1,'p_tarifeMeghdareAvvalie_1','parser.py',111),
  ('tarifeMeghdareAvvalie -> tarifeShenaseyeMoteghayyer EQUALS ebarateSade','tarifeMeghdareAvvalie',3,'p_tarifeMeghdareAvvalie_2','parser.py',116),
  ('tarifeShenaseyeMoteghayyer -> SHENASE','tarifeShenaseyeMoteghayyer',1,'p_tarifeShenaseyeMoteghayyer_1','parser.py',121),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET INT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_2','parser.py',126),
  ('tarifeShenaseyeMoteghayyer -> SHENASE OPEN_BRACKET FLOAT CLOSE_BRACKET','tarifeShenaseyeMoteghayyer',4,'p_tarifeShenaseyeMoteghayyer_3','parser.py',131),
  ('tarifeTabe -> jens SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',6,'p_tarifeTabe_1','parser.py',136),
  ('tarifeTabe -> SHENASE OPEN_PAREN vorudi CLOSE_PAREN jomle','tarifeTabe',5,'p_tarifeTabe_2','parser.py',141),
  ('vorudi -> vorudiha','vorudi',1,'p_vorudi_1','parser.py',146),
  ('vorudi -> epsilon','vorudi',1,'p_vorudi_2','parser.py',151),
  ('vorudiha -> vorudiha NOGHTE_VIRGUL jensVorudiha','vorudiha',3,'p_vorudiha_1','parser.py',156),
  ('vorudiha -> jensVorudiha','vorudiha',1,'p_vorudiha_2','parser.py',161),
  ('jensVorudiha -> jens shenaseyeVorudiha','jensVorudiha',2,'p_jensVorudiha','parser.py',166),
  ('shenaseyeVorudiha -> shenaseyeVorudiha COMMA shenaseyeVorudi','shenaseyeVorudiha',3,'p_shenaseyeVorudiha_1','parser.py',171),
  ('shenaseyeVorudiha -> shenaseyeVorudi','shenaseyeVorudiha',1,'p_shenaseyeVorudiha_2','parser.py',176),
  ('shenaseyeVorudi -> SHENASE','shenaseyeVorudi',1,'p_shenaseyeVorudi_1','parser.py',181),
  ('shenaseyeVorudi -> SHENASE OPEN_BRACKET CLOSE_BRACKET','shenaseyeVorudi',3,'p_shenaseyeVorudi_2','parser.py',186),
  ('jomle -> jomleyeMorakkab','jomle',1,'p_jomle_1','parser.py',191),
  ('jomle -> jomleyeEbarat','jomle',1,'p_jomle_2','parser.py',196),
  ('jomle -> jomleyeEntekhab','jomle',1,'p_jomle_3','parser.py',201),
  ('jomle -> jomleyeTekrar','jomle',1,'p_jomle_4','parser.py',206),
  ('jomle -> jomleyeBazgasht','jomle',1,'p_jomle_5','parser.py',211),
  ('jomle -> jomleyeShekast','jomle',1,'p_jomle_6','parser.py',216),
  ('jomleyeMorakkab -> OPEN_BRACE tarifhayeMahalli jomleha CLOSE_BRACE','jomleyeMorakkab',4,'p_jomleyeMorakkab','parser.py',221),
  ('jomleha -> jomleha jomle','jomleha',2,'p_jomleha_1','parser.py',226),
  ('jomleha -> epsilon','jomleha',1,'p_jomleha_2','parser.py',231),
  ('jomleyeEbarat -> ebarat NOGHTE_VIRGUL','jomleyeEbarat',2,'p_jomleyeEbarat_1','parser.py',236),
  ('jomleyeEbarat -> NOGHTE_VIRGUL','jomleyeEbarat',1,'p_jomleyeEbarat_2','parser.py',241),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle','jomleyeEntekhab',4,'p_jomleyeEntekhab_1','parser.py',246),
  ('jomleyeEntekhab -> IF_KW ebarateSade THEN_KW jomle ELSE_KW jomle','jomleyeEntekhab',6,'p_jomleyeEntekhab_2','parser.py',251),
  ('jomleyeEntekhab -> SWITCH_KW OPEN_PAREN ebarateSade CLOSE_PAREN onsoreHalat onsorePishfarz END_KW','jomleyeEntekhab',7,'p_jomleyeEntekhab_3','parser.py',256),
  ('onsoreHalat -> CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_1','parser.py',262),
  ('onsoreHalat -> CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',5,'p_onsoreHalat_2','parser.py',267),
  ('onsoreHalat -> onsoreHalat CASE_KW INT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_3','parser.py',272),
  ('onsoreHalat -> onsoreHalat CASE_KW FLOAT COLON jomle NOGHTE_VIRGUL','onsoreHalat',6,'p_onsoreHalat_4','parser.py',277),
  ('onsorePishfarz -> DEFAULT_KW COLON jomle NOGHTE_VIRGUL','onsorePishfarz',4,'p_onsorePishfarz_1','parser.py',282),
  ('onsorePishfarz -> epsilon','onsorePishfarz',1,'p_onsorePishfarz_2','parser.py',287),
  ('jomleyeTekrar -> WHILE_KW OPEN_PAREN ebarateSade CLOSE_PAREN jomle','jomleyeTekrar',5,'p_jomleyeTekrar','parser.py',292),
  ('jomleyeBazgasht -> RETURN_KW NOGHTE_VIRGUL','jomleyeBazgasht',2,'p_jomleyeBazgasht_1','parser.py',297),
  ('jomleyeBazgasht -> RETURN_KW ebarat NOGHTE_VIRGUL','jomleyeBazgasht',3,'p_jomleyeBazgasht_2','parser.py',302),
  ('jomleyeShekast -> BREAK_KW NOGHTE_VIRGUL','jomleyeShekast',2,'p_jomleyeShekast','parser.py',307),
  ('ebarat -> taghirpazir EQUALS ebarat','ebarat',3,'p_ebarat_1','parser.py',312),
  ('ebarat -> taghirpazir PLUS_EQ ebarat','ebarat',3,'p_ebarat_2','parser.py',317),
  ('ebarat -> taghirpazir MINUS_EQ ebarat','ebarat',3,'p_ebarat_3','parser.py',322),
  ('ebarat -> taghirpazir TIMES_EQ ebarat','ebarat',3,'p_ebarat_4','parser.py',327),
  ('ebarat -> taghirpazir DIVIDE_EQ ebarat','ebarat',3,'p_ebarat_5','parser.py',332),
  ('ebarat -> taghirpazir PLUS_PLUS','ebarat',2,'p_ebarat_6','parser.py',337),
  ('ebarat -> taghirpazir MINUS_MINUS','ebarat',2,'p_ebarat_7','parser.py',342),
  ('ebarat -> ebarateSade','ebarat',1,'p_ebarat_8','parser.py',347),
  ('ebarateSade -> ebarateSade OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_1','parser.py',352),
  ('ebarateSade -> ebarateSade AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_2','parser.py',357),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_OR_KW ebarateSade','ebarateSade',3,'p_ebarateSade_3','parser.py',362),
  ('ebarateSade -> ebarateSade SHORT_CIRCUIT_AND_KW ebarateSade','ebarateSade',3,'p_ebarateSade_4','parser.py',367),
  ('ebarateSade -> NOT_KW ebarateSade','ebarateSade',2,'p_ebarateSade_5','parser.py',372),
  ('ebarateSade -> ebarateRabetei','ebarateSade',1,'p_ebarateSade_6','parser.py',377),
  ('ebarateRabetei -> ebarateRiaziManteghi','ebarateRabetei',1,'p_ebarateRabetei_1','parser.py',382),
  ('ebarateRabetei -> ebarateRiaziManteghi amalgareRabetei ebarateRiaziManteghi','ebarateRabetei',3,'p_ebarateRabetei_2','parser.py',387),
  ('amalgareRabetei -> LT','amalgareRabetei',1,'p_amalgareRabetei_1','parser.py',392),
  ('amalgareRabetei -> GT','amalgareRabetei',1,'p_amalgareRabetei_2','parser.py',397),
  ('amalgareRabetei -> GE','amalgareRabetei',1,'p_amalgareRabetei_3','parser.py',402),
  ('amalgareRabetei -> LE','amalgareRabetei',1,'p_amalgareRabetei_4','parser.py',407),
  ('amalgareRabetei -> EQ','amalgareRabetei',1,'p_amalgareRabetei_5','parser.py',412),
  ('ebarateRiaziManteghi -> ebarateYegani','ebarateRiaziManteghi',1,'p_ebarateRiaziManteghi_1','parser.py',417),
  ('ebarateRiaziManteghi -> ebarateRiaziManteghi amalgareRiazi ebarateRiaziManteghi','ebarateRiaziManteghi',3,'p_ebarateRiaziManteghi_2','parser.py',422),
  ('amalgareRiazi -> PLUS','amalgareRiazi',1,'p_amalgareRiazi_1','parser.py',427),
  ('amalgareRiazi -> MINUS','amalgareRiazi',1,'p_amalgareRiazi_2','parser.py',432),
  ('amalgareRiazi -> TIMES','amalgareRiazi',1,'p_amalgareRiazi_3','parser.py',437),
  ('amalgareRiazi -> DIVIDE','amalgareRiazi',1,'p_amalgareRiazi_4','parser.py',442),
  ('amalgareRiazi -> MOD','amalgareRiazi',1,'p_amalgareRiazi_5','parser.py',447),
  ('ebarateYegani -> amalgareYegani ebarateYegani','ebarateYegani',2,'p_ebarateYegani_1','parser.py',452),
  ('ebarateYegani -> amel','ebarateYegani',1,'p_ebarateYegani_2','parser.py',457),
  ('amalgareYegani -> MINUS','amalgareYegani',1,'p_amalgareYegani_1','parser.py',462),
  ('amalgareYegani -> TIMES','amalgareYegani',1,'p_amalgareYegani_2','parser.py',467),
  ('amalgareYegani -> QUESTION_MARK','amalgareYegani',1,'p_amalgareYegani_3','parser.py',472),
  ('amel -> taghirpazir','amel',1,'p_amel_1','parser.py',477),
  ('amel -> taghirnapazir','amel',1,'p_amel_2','parser.py',482),
  ('taghirpazir -> SHENASE','taghirpazir',1,'p_taghirpazir_1','parser.py',487),
  ('taghirpazir -> taghirpazir OPEN_BRACKET ebarat CLOSE_BRACKET','taghirpazir',4,'p_taghirpazir_2','parser.py',492),
  ('taghirpazir -> taghirpazir DOT SHENASE','taghirpazir',3,'p_taghirpazir_3','parser.py',497),
  ('taghirnapazir -> OPEN_PAREN ebarat CLOSE_PAREN','taghirnapazir',3,'p_taghirnapazir_1','parser.py',502),
  ('taghirnapazir -> sedaZadan','taghirnapazir',1,'p_taghirnapazir_2','parser.py',507),
  ('taghirnapazir -> meghdareSabet','taghirnapazir',1,'p_taghirnapazir_3','parser.py',512),
  ('sedaZadan -> SHENASE OPEN_PAREN bordareVorudi CLOSE_PAREN','sedaZadan',4,'p_sedaZadan','parser.py',517),
  ('bordareVorudi -> bordareVorudiha','bordareVorudi',1,'p_bordareVorudi_1','parser.py',522),
  ('bordareVorudi -> epsilon','bordareVorudi',1,'p_bordareVorudi_2','parser.py',527),
  ('bordareVorudiha -> bordareVorudiha COMMA ebarat','bordareVorudiha',3,'p_bordareVorudiha_1','parser.py',532),
  ('bordareVorudiha -> ebarat','bordareVorudiha',1,'p_bordareVorudiha_2','parser.py',537),
  ('meghdareSabet -> INT','meghdareSabet',1,'p_meghdareSabet_1','parser.py',542),
  ('meghdareSabet -> FLOAT','meghdareSabet',1,'p_meghdareSabet_2','parser.py',547),
  ('meghdareSabet -> HARFE_SABET','meghdareSabet',1,'p_meghdareSabet_3','parser.py',552),
  ('meghdareSabet -> TRUE_KW','meghdareSabet',1,'p_meghdareSabet_4','parser.py',557),
  ('meghdareSabet -> FALSE_KW','meghdareSabet',1,'p_meghdareSabet_5','parser.py',562),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','parser.py',572),
]
